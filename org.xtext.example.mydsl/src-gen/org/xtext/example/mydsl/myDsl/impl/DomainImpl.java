/**
 * generated by Xtext 2.16.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.myDsl.Constraint;
import org.xtext.example.mydsl.myDsl.ContextChange;
import org.xtext.example.mydsl.myDsl.ContextFragment;
import org.xtext.example.mydsl.myDsl.ContextModel;
import org.xtext.example.mydsl.myDsl.Domain;
import org.xtext.example.mydsl.myDsl.Entity;
import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.Scenario;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Domain</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.DomainImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.DomainImpl#getContextmodels <em>Contextmodels</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.DomainImpl#getContextfragments <em>Contextfragments</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.DomainImpl#getEntities <em>Entities</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.DomainImpl#getContextchanges <em>Contextchanges</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.DomainImpl#getObjects <em>Objects</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.DomainImpl#getConstraints <em>Constraints</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.DomainImpl#getScenarios <em>Scenarios</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DomainImpl extends MinimalEObjectImpl.Container implements Domain
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getContextmodels() <em>Contextmodels</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContextmodels()
   * @generated
   * @ordered
   */
  protected EList<ContextModel> contextmodels;

  /**
   * The cached value of the '{@link #getContextfragments() <em>Contextfragments</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContextfragments()
   * @generated
   * @ordered
   */
  protected EList<ContextFragment> contextfragments;

  /**
   * The cached value of the '{@link #getEntities() <em>Entities</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEntities()
   * @generated
   * @ordered
   */
  protected EList<Entity> entities;

  /**
   * The cached value of the '{@link #getContextchanges() <em>Contextchanges</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContextchanges()
   * @generated
   * @ordered
   */
  protected EList<ContextChange> contextchanges;

  /**
   * The cached value of the '{@link #getObjects() <em>Objects</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObjects()
   * @generated
   * @ordered
   */
  protected EList<org.xtext.example.mydsl.myDsl.Object> objects;

  /**
   * The cached value of the '{@link #getConstraints() <em>Constraints</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConstraints()
   * @generated
   * @ordered
   */
  protected EList<Constraint> constraints;

  /**
   * The cached value of the '{@link #getScenarios() <em>Scenarios</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getScenarios()
   * @generated
   * @ordered
   */
  protected EList<Scenario> scenarios;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DomainImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.DOMAIN;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.DOMAIN__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<ContextModel> getContextmodels()
  {
    if (contextmodels == null)
    {
      contextmodels = new EObjectContainmentEList<ContextModel>(ContextModel.class, this, MyDslPackage.DOMAIN__CONTEXTMODELS);
    }
    return contextmodels;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<ContextFragment> getContextfragments()
  {
    if (contextfragments == null)
    {
      contextfragments = new EObjectContainmentEList<ContextFragment>(ContextFragment.class, this, MyDslPackage.DOMAIN__CONTEXTFRAGMENTS);
    }
    return contextfragments;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Entity> getEntities()
  {
    if (entities == null)
    {
      entities = new EObjectContainmentEList<Entity>(Entity.class, this, MyDslPackage.DOMAIN__ENTITIES);
    }
    return entities;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<ContextChange> getContextchanges()
  {
    if (contextchanges == null)
    {
      contextchanges = new EObjectContainmentEList<ContextChange>(ContextChange.class, this, MyDslPackage.DOMAIN__CONTEXTCHANGES);
    }
    return contextchanges;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<org.xtext.example.mydsl.myDsl.Object> getObjects()
  {
    if (objects == null)
    {
      objects = new EObjectContainmentEList<org.xtext.example.mydsl.myDsl.Object>(org.xtext.example.mydsl.myDsl.Object.class, this, MyDslPackage.DOMAIN__OBJECTS);
    }
    return objects;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Constraint> getConstraints()
  {
    if (constraints == null)
    {
      constraints = new EObjectContainmentEList<Constraint>(Constraint.class, this, MyDslPackage.DOMAIN__CONSTRAINTS);
    }
    return constraints;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Scenario> getScenarios()
  {
    if (scenarios == null)
    {
      scenarios = new EObjectContainmentEList<Scenario>(Scenario.class, this, MyDslPackage.DOMAIN__SCENARIOS);
    }
    return scenarios;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.DOMAIN__CONTEXTMODELS:
        return ((InternalEList<?>)getContextmodels()).basicRemove(otherEnd, msgs);
      case MyDslPackage.DOMAIN__CONTEXTFRAGMENTS:
        return ((InternalEList<?>)getContextfragments()).basicRemove(otherEnd, msgs);
      case MyDslPackage.DOMAIN__ENTITIES:
        return ((InternalEList<?>)getEntities()).basicRemove(otherEnd, msgs);
      case MyDslPackage.DOMAIN__CONTEXTCHANGES:
        return ((InternalEList<?>)getContextchanges()).basicRemove(otherEnd, msgs);
      case MyDslPackage.DOMAIN__OBJECTS:
        return ((InternalEList<?>)getObjects()).basicRemove(otherEnd, msgs);
      case MyDslPackage.DOMAIN__CONSTRAINTS:
        return ((InternalEList<?>)getConstraints()).basicRemove(otherEnd, msgs);
      case MyDslPackage.DOMAIN__SCENARIOS:
        return ((InternalEList<?>)getScenarios()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.DOMAIN__NAME:
        return getName();
      case MyDslPackage.DOMAIN__CONTEXTMODELS:
        return getContextmodels();
      case MyDslPackage.DOMAIN__CONTEXTFRAGMENTS:
        return getContextfragments();
      case MyDslPackage.DOMAIN__ENTITIES:
        return getEntities();
      case MyDslPackage.DOMAIN__CONTEXTCHANGES:
        return getContextchanges();
      case MyDslPackage.DOMAIN__OBJECTS:
        return getObjects();
      case MyDslPackage.DOMAIN__CONSTRAINTS:
        return getConstraints();
      case MyDslPackage.DOMAIN__SCENARIOS:
        return getScenarios();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.DOMAIN__NAME:
        setName((String)newValue);
        return;
      case MyDslPackage.DOMAIN__CONTEXTMODELS:
        getContextmodels().clear();
        getContextmodels().addAll((Collection<? extends ContextModel>)newValue);
        return;
      case MyDslPackage.DOMAIN__CONTEXTFRAGMENTS:
        getContextfragments().clear();
        getContextfragments().addAll((Collection<? extends ContextFragment>)newValue);
        return;
      case MyDslPackage.DOMAIN__ENTITIES:
        getEntities().clear();
        getEntities().addAll((Collection<? extends Entity>)newValue);
        return;
      case MyDslPackage.DOMAIN__CONTEXTCHANGES:
        getContextchanges().clear();
        getContextchanges().addAll((Collection<? extends ContextChange>)newValue);
        return;
      case MyDslPackage.DOMAIN__OBJECTS:
        getObjects().clear();
        getObjects().addAll((Collection<? extends org.xtext.example.mydsl.myDsl.Object>)newValue);
        return;
      case MyDslPackage.DOMAIN__CONSTRAINTS:
        getConstraints().clear();
        getConstraints().addAll((Collection<? extends Constraint>)newValue);
        return;
      case MyDslPackage.DOMAIN__SCENARIOS:
        getScenarios().clear();
        getScenarios().addAll((Collection<? extends Scenario>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.DOMAIN__NAME:
        setName(NAME_EDEFAULT);
        return;
      case MyDslPackage.DOMAIN__CONTEXTMODELS:
        getContextmodels().clear();
        return;
      case MyDslPackage.DOMAIN__CONTEXTFRAGMENTS:
        getContextfragments().clear();
        return;
      case MyDslPackage.DOMAIN__ENTITIES:
        getEntities().clear();
        return;
      case MyDslPackage.DOMAIN__CONTEXTCHANGES:
        getContextchanges().clear();
        return;
      case MyDslPackage.DOMAIN__OBJECTS:
        getObjects().clear();
        return;
      case MyDslPackage.DOMAIN__CONSTRAINTS:
        getConstraints().clear();
        return;
      case MyDslPackage.DOMAIN__SCENARIOS:
        getScenarios().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.DOMAIN__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case MyDslPackage.DOMAIN__CONTEXTMODELS:
        return contextmodels != null && !contextmodels.isEmpty();
      case MyDslPackage.DOMAIN__CONTEXTFRAGMENTS:
        return contextfragments != null && !contextfragments.isEmpty();
      case MyDslPackage.DOMAIN__ENTITIES:
        return entities != null && !entities.isEmpty();
      case MyDslPackage.DOMAIN__CONTEXTCHANGES:
        return contextchanges != null && !contextchanges.isEmpty();
      case MyDslPackage.DOMAIN__OBJECTS:
        return objects != null && !objects.isEmpty();
      case MyDslPackage.DOMAIN__CONSTRAINTS:
        return constraints != null && !constraints.isEmpty();
      case MyDslPackage.DOMAIN__SCENARIOS:
        return scenarios != null && !scenarios.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //DomainImpl
