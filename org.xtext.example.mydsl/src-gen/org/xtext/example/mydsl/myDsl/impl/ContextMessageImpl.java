/**
 * generated by Xtext 2.16.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.myDsl.ContextMessage;
import org.xtext.example.mydsl.myDsl.ContextMessageContent;
import org.xtext.example.mydsl.myDsl.MyDslPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Context Message</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ContextMessageImpl#getContent <em>Content</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ContextMessageImpl#isRequired <em>Required</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ContextMessageImpl#isFail <em>Fail</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ContextMessageImpl#isStrict <em>Strict</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ContextMessageImpl extends MinimalEObjectImpl.Container implements ContextMessage
{
  /**
   * The cached value of the '{@link #getContent() <em>Content</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContent()
   * @generated
   * @ordered
   */
  protected EList<ContextMessageContent> content;

  /**
   * The default value of the '{@link #isRequired() <em>Required</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isRequired()
   * @generated
   * @ordered
   */
  protected static final boolean REQUIRED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isRequired() <em>Required</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isRequired()
   * @generated
   * @ordered
   */
  protected boolean required = REQUIRED_EDEFAULT;

  /**
   * The default value of the '{@link #isFail() <em>Fail</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isFail()
   * @generated
   * @ordered
   */
  protected static final boolean FAIL_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isFail() <em>Fail</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isFail()
   * @generated
   * @ordered
   */
  protected boolean fail = FAIL_EDEFAULT;

  /**
   * The default value of the '{@link #isStrict() <em>Strict</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isStrict()
   * @generated
   * @ordered
   */
  protected static final boolean STRICT_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isStrict() <em>Strict</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isStrict()
   * @generated
   * @ordered
   */
  protected boolean strict = STRICT_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ContextMessageImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.CONTEXT_MESSAGE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<ContextMessageContent> getContent()
  {
    if (content == null)
    {
      content = new EObjectContainmentEList<ContextMessageContent>(ContextMessageContent.class, this, MyDslPackage.CONTEXT_MESSAGE__CONTENT);
    }
    return content;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isRequired()
  {
    return required;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRequired(boolean newRequired)
  {
    boolean oldRequired = required;
    required = newRequired;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.CONTEXT_MESSAGE__REQUIRED, oldRequired, required));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isFail()
  {
    return fail;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFail(boolean newFail)
  {
    boolean oldFail = fail;
    fail = newFail;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.CONTEXT_MESSAGE__FAIL, oldFail, fail));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isStrict()
  {
    return strict;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStrict(boolean newStrict)
  {
    boolean oldStrict = strict;
    strict = newStrict;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.CONTEXT_MESSAGE__STRICT, oldStrict, strict));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.CONTEXT_MESSAGE__CONTENT:
        return ((InternalEList<?>)getContent()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.CONTEXT_MESSAGE__CONTENT:
        return getContent();
      case MyDslPackage.CONTEXT_MESSAGE__REQUIRED:
        return isRequired();
      case MyDslPackage.CONTEXT_MESSAGE__FAIL:
        return isFail();
      case MyDslPackage.CONTEXT_MESSAGE__STRICT:
        return isStrict();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.CONTEXT_MESSAGE__CONTENT:
        getContent().clear();
        getContent().addAll((Collection<? extends ContextMessageContent>)newValue);
        return;
      case MyDslPackage.CONTEXT_MESSAGE__REQUIRED:
        setRequired((Boolean)newValue);
        return;
      case MyDslPackage.CONTEXT_MESSAGE__FAIL:
        setFail((Boolean)newValue);
        return;
      case MyDslPackage.CONTEXT_MESSAGE__STRICT:
        setStrict((Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.CONTEXT_MESSAGE__CONTENT:
        getContent().clear();
        return;
      case MyDslPackage.CONTEXT_MESSAGE__REQUIRED:
        setRequired(REQUIRED_EDEFAULT);
        return;
      case MyDslPackage.CONTEXT_MESSAGE__FAIL:
        setFail(FAIL_EDEFAULT);
        return;
      case MyDslPackage.CONTEXT_MESSAGE__STRICT:
        setStrict(STRICT_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.CONTEXT_MESSAGE__CONTENT:
        return content != null && !content.isEmpty();
      case MyDslPackage.CONTEXT_MESSAGE__REQUIRED:
        return required != REQUIRED_EDEFAULT;
      case MyDslPackage.CONTEXT_MESSAGE__FAIL:
        return fail != FAIL_EDEFAULT;
      case MyDslPackage.CONTEXT_MESSAGE__STRICT:
        return strict != STRICT_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (required: ");
    result.append(required);
    result.append(", fail: ");
    result.append(fail);
    result.append(", strict: ");
    result.append(strict);
    result.append(')');
    return result.toString();
  }

} //ContextMessageImpl
