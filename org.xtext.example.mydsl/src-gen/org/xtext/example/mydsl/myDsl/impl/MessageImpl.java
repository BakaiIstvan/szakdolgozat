/**
 * generated by Xtext 2.16.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.myDsl.Constraint;
import org.xtext.example.mydsl.myDsl.Message;
import org.xtext.example.mydsl.myDsl.MyDslPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Message</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.MessageImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.MessageImpl#isRequired <em>Required</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.MessageImpl#isFail <em>Fail</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.MessageImpl#isStrict <em>Strict</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.MessageImpl#getSender <em>Sender</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.MessageImpl#getReceiver <em>Receiver</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.MessageImpl#isPast <em>Past</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.MessageImpl#isFuture <em>Future</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.MessageImpl#isConstraint <em>Constraint</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.MessageImpl#getC <em>C</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MessageImpl extends MinimalEObjectImpl.Container implements Message
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #isRequired() <em>Required</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isRequired()
   * @generated
   * @ordered
   */
  protected static final boolean REQUIRED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isRequired() <em>Required</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isRequired()
   * @generated
   * @ordered
   */
  protected boolean required = REQUIRED_EDEFAULT;

  /**
   * The default value of the '{@link #isFail() <em>Fail</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isFail()
   * @generated
   * @ordered
   */
  protected static final boolean FAIL_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isFail() <em>Fail</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isFail()
   * @generated
   * @ordered
   */
  protected boolean fail = FAIL_EDEFAULT;

  /**
   * The default value of the '{@link #isStrict() <em>Strict</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isStrict()
   * @generated
   * @ordered
   */
  protected static final boolean STRICT_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isStrict() <em>Strict</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isStrict()
   * @generated
   * @ordered
   */
  protected boolean strict = STRICT_EDEFAULT;

  /**
   * The cached value of the '{@link #getSender() <em>Sender</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSender()
   * @generated
   * @ordered
   */
  protected org.xtext.example.mydsl.myDsl.Object sender;

  /**
   * The cached value of the '{@link #getReceiver() <em>Receiver</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReceiver()
   * @generated
   * @ordered
   */
  protected org.xtext.example.mydsl.myDsl.Object receiver;

  /**
   * The default value of the '{@link #isPast() <em>Past</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isPast()
   * @generated
   * @ordered
   */
  protected static final boolean PAST_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isPast() <em>Past</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isPast()
   * @generated
   * @ordered
   */
  protected boolean past = PAST_EDEFAULT;

  /**
   * The default value of the '{@link #isFuture() <em>Future</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isFuture()
   * @generated
   * @ordered
   */
  protected static final boolean FUTURE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isFuture() <em>Future</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isFuture()
   * @generated
   * @ordered
   */
  protected boolean future = FUTURE_EDEFAULT;

  /**
   * The default value of the '{@link #isConstraint() <em>Constraint</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isConstraint()
   * @generated
   * @ordered
   */
  protected static final boolean CONSTRAINT_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isConstraint() <em>Constraint</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isConstraint()
   * @generated
   * @ordered
   */
  protected boolean constraint = CONSTRAINT_EDEFAULT;

  /**
   * The cached value of the '{@link #getC() <em>C</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getC()
   * @generated
   * @ordered
   */
  protected Constraint c;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MessageImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.MESSAGE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.MESSAGE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isRequired()
  {
    return required;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRequired(boolean newRequired)
  {
    boolean oldRequired = required;
    required = newRequired;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.MESSAGE__REQUIRED, oldRequired, required));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isFail()
  {
    return fail;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFail(boolean newFail)
  {
    boolean oldFail = fail;
    fail = newFail;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.MESSAGE__FAIL, oldFail, fail));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isStrict()
  {
    return strict;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStrict(boolean newStrict)
  {
    boolean oldStrict = strict;
    strict = newStrict;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.MESSAGE__STRICT, oldStrict, strict));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public org.xtext.example.mydsl.myDsl.Object getSender()
  {
    if (sender != null && sender.eIsProxy())
    {
      InternalEObject oldSender = (InternalEObject)sender;
      sender = (org.xtext.example.mydsl.myDsl.Object)eResolveProxy(oldSender);
      if (sender != oldSender)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, MyDslPackage.MESSAGE__SENDER, oldSender, sender));
      }
    }
    return sender;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public org.xtext.example.mydsl.myDsl.Object basicGetSender()
  {
    return sender;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSender(org.xtext.example.mydsl.myDsl.Object newSender)
  {
    org.xtext.example.mydsl.myDsl.Object oldSender = sender;
    sender = newSender;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.MESSAGE__SENDER, oldSender, sender));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public org.xtext.example.mydsl.myDsl.Object getReceiver()
  {
    if (receiver != null && receiver.eIsProxy())
    {
      InternalEObject oldReceiver = (InternalEObject)receiver;
      receiver = (org.xtext.example.mydsl.myDsl.Object)eResolveProxy(oldReceiver);
      if (receiver != oldReceiver)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, MyDslPackage.MESSAGE__RECEIVER, oldReceiver, receiver));
      }
    }
    return receiver;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public org.xtext.example.mydsl.myDsl.Object basicGetReceiver()
  {
    return receiver;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReceiver(org.xtext.example.mydsl.myDsl.Object newReceiver)
  {
    org.xtext.example.mydsl.myDsl.Object oldReceiver = receiver;
    receiver = newReceiver;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.MESSAGE__RECEIVER, oldReceiver, receiver));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isPast()
  {
    return past;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPast(boolean newPast)
  {
    boolean oldPast = past;
    past = newPast;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.MESSAGE__PAST, oldPast, past));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isFuture()
  {
    return future;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFuture(boolean newFuture)
  {
    boolean oldFuture = future;
    future = newFuture;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.MESSAGE__FUTURE, oldFuture, future));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isConstraint()
  {
    return constraint;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setConstraint(boolean newConstraint)
  {
    boolean oldConstraint = constraint;
    constraint = newConstraint;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.MESSAGE__CONSTRAINT, oldConstraint, constraint));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Constraint getC()
  {
    if (c != null && c.eIsProxy())
    {
      InternalEObject oldC = (InternalEObject)c;
      c = (Constraint)eResolveProxy(oldC);
      if (c != oldC)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, MyDslPackage.MESSAGE__C, oldC, c));
      }
    }
    return c;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Constraint basicGetC()
  {
    return c;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setC(Constraint newC)
  {
    Constraint oldC = c;
    c = newC;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.MESSAGE__C, oldC, c));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.MESSAGE__NAME:
        return getName();
      case MyDslPackage.MESSAGE__REQUIRED:
        return isRequired();
      case MyDslPackage.MESSAGE__FAIL:
        return isFail();
      case MyDslPackage.MESSAGE__STRICT:
        return isStrict();
      case MyDslPackage.MESSAGE__SENDER:
        if (resolve) return getSender();
        return basicGetSender();
      case MyDslPackage.MESSAGE__RECEIVER:
        if (resolve) return getReceiver();
        return basicGetReceiver();
      case MyDslPackage.MESSAGE__PAST:
        return isPast();
      case MyDslPackage.MESSAGE__FUTURE:
        return isFuture();
      case MyDslPackage.MESSAGE__CONSTRAINT:
        return isConstraint();
      case MyDslPackage.MESSAGE__C:
        if (resolve) return getC();
        return basicGetC();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.MESSAGE__NAME:
        setName((String)newValue);
        return;
      case MyDslPackage.MESSAGE__REQUIRED:
        setRequired((Boolean)newValue);
        return;
      case MyDslPackage.MESSAGE__FAIL:
        setFail((Boolean)newValue);
        return;
      case MyDslPackage.MESSAGE__STRICT:
        setStrict((Boolean)newValue);
        return;
      case MyDslPackage.MESSAGE__SENDER:
        setSender((org.xtext.example.mydsl.myDsl.Object)newValue);
        return;
      case MyDslPackage.MESSAGE__RECEIVER:
        setReceiver((org.xtext.example.mydsl.myDsl.Object)newValue);
        return;
      case MyDslPackage.MESSAGE__PAST:
        setPast((Boolean)newValue);
        return;
      case MyDslPackage.MESSAGE__FUTURE:
        setFuture((Boolean)newValue);
        return;
      case MyDslPackage.MESSAGE__CONSTRAINT:
        setConstraint((Boolean)newValue);
        return;
      case MyDslPackage.MESSAGE__C:
        setC((Constraint)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.MESSAGE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case MyDslPackage.MESSAGE__REQUIRED:
        setRequired(REQUIRED_EDEFAULT);
        return;
      case MyDslPackage.MESSAGE__FAIL:
        setFail(FAIL_EDEFAULT);
        return;
      case MyDslPackage.MESSAGE__STRICT:
        setStrict(STRICT_EDEFAULT);
        return;
      case MyDslPackage.MESSAGE__SENDER:
        setSender((org.xtext.example.mydsl.myDsl.Object)null);
        return;
      case MyDslPackage.MESSAGE__RECEIVER:
        setReceiver((org.xtext.example.mydsl.myDsl.Object)null);
        return;
      case MyDslPackage.MESSAGE__PAST:
        setPast(PAST_EDEFAULT);
        return;
      case MyDslPackage.MESSAGE__FUTURE:
        setFuture(FUTURE_EDEFAULT);
        return;
      case MyDslPackage.MESSAGE__CONSTRAINT:
        setConstraint(CONSTRAINT_EDEFAULT);
        return;
      case MyDslPackage.MESSAGE__C:
        setC((Constraint)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.MESSAGE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case MyDslPackage.MESSAGE__REQUIRED:
        return required != REQUIRED_EDEFAULT;
      case MyDslPackage.MESSAGE__FAIL:
        return fail != FAIL_EDEFAULT;
      case MyDslPackage.MESSAGE__STRICT:
        return strict != STRICT_EDEFAULT;
      case MyDslPackage.MESSAGE__SENDER:
        return sender != null;
      case MyDslPackage.MESSAGE__RECEIVER:
        return receiver != null;
      case MyDslPackage.MESSAGE__PAST:
        return past != PAST_EDEFAULT;
      case MyDslPackage.MESSAGE__FUTURE:
        return future != FUTURE_EDEFAULT;
      case MyDslPackage.MESSAGE__CONSTRAINT:
        return constraint != CONSTRAINT_EDEFAULT;
      case MyDslPackage.MESSAGE__C:
        return c != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", required: ");
    result.append(required);
    result.append(", fail: ");
    result.append(fail);
    result.append(", strict: ");
    result.append(strict);
    result.append(", past: ");
    result.append(past);
    result.append(", future: ");
    result.append(future);
    result.append(", constraint: ");
    result.append(constraint);
    result.append(')');
    return result.toString();
  }

} //MessageImpl
