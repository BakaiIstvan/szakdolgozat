/*
 * generated by Xtext 2.16.0
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class DomainElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Domain");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSpecificationAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cSpecificationSpecificationKeyword_0_0 = (Keyword)cSpecificationAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cIncludesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cIncludesIncludeParserRuleCall_3_0 = (RuleCall)cIncludesAssignment_3.eContents().get(0);
		private final Assignment cContextmodelsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cContextmodelsContextModelParserRuleCall_4_0 = (RuleCall)cContextmodelsAssignment_4.eContents().get(0);
		private final Assignment cContextfragmentsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cContextfragmentsContextFragmentParserRuleCall_5_0 = (RuleCall)cContextfragmentsAssignment_5.eContents().get(0);
		private final Assignment cObjectsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cObjectsObjectParserRuleCall_6_0 = (RuleCall)cObjectsAssignment_6.eContents().get(0);
		private final Assignment cParametersAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cParametersParameterParserRuleCall_7_0 = (RuleCall)cParametersAssignment_7.eContents().get(0);
		private final Assignment cClocksAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cClocksClockParserRuleCall_8_0 = (RuleCall)cClocksAssignment_8.eContents().get(0);
		private final Assignment cConstraintsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cConstraintsConstraintParserRuleCall_9_0 = (RuleCall)cConstraintsAssignment_9.eContents().get(0);
		private final Assignment cScenariosAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cScenariosScenarioParserRuleCall_10_0 = (RuleCall)cScenariosAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Domain:
		//	specification='specification'? name=ID? '{'?
		//	includes+=Include*
		//	contextmodels+=ContextModel*
		//	contextfragments+=ContextFragment*
		//	objects+=Object*
		//	parameters+=Parameter*
		//	clocks+=Clock*
		//	constraints+=Constraint*
		//	scenarios+=Scenario* '}'?;
		@Override public ParserRule getRule() { return rule; }
		
		//specification='specification'? name=ID? '{'? includes+=Include* contextmodels+=ContextModel*
		//contextfragments+=ContextFragment* objects+=Object* parameters+=Parameter* clocks+=Clock* constraints+=Constraint*
		//scenarios+=Scenario* '}'?
		public Group getGroup() { return cGroup; }
		
		//specification='specification'?
		public Assignment getSpecificationAssignment_0() { return cSpecificationAssignment_0; }
		
		//'specification'
		public Keyword getSpecificationSpecificationKeyword_0_0() { return cSpecificationSpecificationKeyword_0_0; }
		
		//name=ID?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'?
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//includes+=Include*
		public Assignment getIncludesAssignment_3() { return cIncludesAssignment_3; }
		
		//Include
		public RuleCall getIncludesIncludeParserRuleCall_3_0() { return cIncludesIncludeParserRuleCall_3_0; }
		
		//contextmodels+=ContextModel*
		public Assignment getContextmodelsAssignment_4() { return cContextmodelsAssignment_4; }
		
		//ContextModel
		public RuleCall getContextmodelsContextModelParserRuleCall_4_0() { return cContextmodelsContextModelParserRuleCall_4_0; }
		
		//contextfragments+=ContextFragment*
		public Assignment getContextfragmentsAssignment_5() { return cContextfragmentsAssignment_5; }
		
		//ContextFragment
		public RuleCall getContextfragmentsContextFragmentParserRuleCall_5_0() { return cContextfragmentsContextFragmentParserRuleCall_5_0; }
		
		//objects+=Object*
		public Assignment getObjectsAssignment_6() { return cObjectsAssignment_6; }
		
		//Object
		public RuleCall getObjectsObjectParserRuleCall_6_0() { return cObjectsObjectParserRuleCall_6_0; }
		
		//parameters+=Parameter*
		public Assignment getParametersAssignment_7() { return cParametersAssignment_7; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_7_0() { return cParametersParameterParserRuleCall_7_0; }
		
		//clocks+=Clock*
		public Assignment getClocksAssignment_8() { return cClocksAssignment_8; }
		
		//Clock
		public RuleCall getClocksClockParserRuleCall_8_0() { return cClocksClockParserRuleCall_8_0; }
		
		//constraints+=Constraint*
		public Assignment getConstraintsAssignment_9() { return cConstraintsAssignment_9; }
		
		//Constraint
		public RuleCall getConstraintsConstraintParserRuleCall_9_0() { return cConstraintsConstraintParserRuleCall_9_0; }
		
		//scenarios+=Scenario*
		public Assignment getScenariosAssignment_10() { return cScenariosAssignment_10; }
		
		//Scenario
		public RuleCall getScenariosScenarioParserRuleCall_10_0() { return cScenariosScenarioParserRuleCall_10_0; }
		
		//'}'?
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class IncludeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Include");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cContextAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cContextContextModelCrossReference_1_0 = (CrossReference)cContextAssignment_1.eContents().get(0);
		private final RuleCall cContextContextModelIDTerminalRuleCall_1_0_1 = (RuleCall)cContextContextModelCrossReference_1_0.eContents().get(1);
		private final Keyword cFromKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cImportURIAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cImportURISTRINGTerminalRuleCall_3_0 = (RuleCall)cImportURIAssignment_3.eContents().get(0);
		
		//Include:
		//	'import' context=[ContextModel] 'from' importURI=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'import' context=[ContextModel] 'from' importURI=STRING
		public Group getGroup() { return cGroup; }
		
		//'import'
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }
		
		//context=[ContextModel]
		public Assignment getContextAssignment_1() { return cContextAssignment_1; }
		
		//[ContextModel]
		public CrossReference getContextContextModelCrossReference_1_0() { return cContextContextModelCrossReference_1_0; }
		
		//ID
		public RuleCall getContextContextModelIDTerminalRuleCall_1_0_1() { return cContextContextModelIDTerminalRuleCall_1_0_1; }
		
		//'from'
		public Keyword getFromKeyword_2() { return cFromKeyword_2; }
		
		//importURI=STRING
		public Assignment getImportURIAssignment_3() { return cImportURIAssignment_3; }
		
		//STRING
		public RuleCall getImportURISTRINGTerminalRuleCall_3_0() { return cImportURISTRINGTerminalRuleCall_3_0; }
	}
	public class ContextModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ContextModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cContextmodelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEntitiesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEntitiesEntityParserRuleCall_3_0 = (RuleCall)cEntitiesAssignment_3.eContents().get(0);
		private final Assignment cRelationsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRelationsRelationParserRuleCall_4_0 = (RuleCall)cRelationsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ContextModel:
		//	'contextmodel' name=ID '{'
		//	entities+=Entity*
		//	relations+=Relation*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'contextmodel' name=ID '{' entities+=Entity* relations+=Relation* '}'
		public Group getGroup() { return cGroup; }
		
		//'contextmodel'
		public Keyword getContextmodelKeyword_0() { return cContextmodelKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//entities+=Entity*
		public Assignment getEntitiesAssignment_3() { return cEntitiesAssignment_3; }
		
		//Entity
		public RuleCall getEntitiesEntityParserRuleCall_3_0() { return cEntitiesEntityParserRuleCall_3_0; }
		
		//relations+=Relation*
		public Assignment getRelationsAssignment_4() { return cRelationsAssignment_4; }
		
		//Relation
		public RuleCall getRelationsRelationParserRuleCall_4_0() { return cRelationsRelationParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ContextFragmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ContextFragment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cContextfragmentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEntitiesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEntitiesFEntityParserRuleCall_3_0 = (RuleCall)cEntitiesAssignment_3.eContents().get(0);
		private final Assignment cRelationsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRelationsFRelationParserRuleCall_4_0 = (RuleCall)cRelationsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ContextFragment:
		//	'contextfragment' name=ID '{'
		//	entities+=FEntity*
		//	relations+=FRelation*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'contextfragment' name=ID '{' entities+=FEntity* relations+=FRelation* '}'
		public Group getGroup() { return cGroup; }
		
		//'contextfragment'
		public Keyword getContextfragmentKeyword_0() { return cContextfragmentKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//entities+=FEntity*
		public Assignment getEntitiesAssignment_3() { return cEntitiesAssignment_3; }
		
		//FEntity
		public RuleCall getEntitiesFEntityParserRuleCall_3_0() { return cEntitiesFEntityParserRuleCall_3_0; }
		
		//relations+=FRelation*
		public Assignment getRelationsAssignment_4() { return cRelationsAssignment_4; }
		
		//FRelation
		public RuleCall getRelationsFRelationParserRuleCall_4_0() { return cRelationsFRelationParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAttributeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIntAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIntIntKeyword_1_0 = (Keyword)cIntAssignment_1.eContents().get(0);
		private final Assignment cFloatAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cFloatFloatKeyword_2_0 = (Keyword)cFloatAssignment_2.eContents().get(0);
		private final Assignment cStringAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cStringStringKeyword_3_0 = (Keyword)cStringAssignment_3.eContents().get(0);
		private final Assignment cBooleanAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Keyword cBooleanBooleanKeyword_4_0 = (Keyword)cBooleanAssignment_4.eContents().get(0);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameIDTerminalRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cValueAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cValueAttributeValueParserRuleCall_7_0 = (RuleCall)cValueAssignment_7.eContents().get(0);
		private final Keyword cSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Attribute:
		//	'attribute' int?='int'? float?='float'? string?='string'? boolean?='boolean'? name=ID '='? value=AttributeValue? ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'attribute' int?='int'? float?='float'? string?='string'? boolean?='boolean'? name=ID '='? value=AttributeValue? ';'
		public Group getGroup() { return cGroup; }
		
		//'attribute'
		public Keyword getAttributeKeyword_0() { return cAttributeKeyword_0; }
		
		//int?='int'?
		public Assignment getIntAssignment_1() { return cIntAssignment_1; }
		
		//'int'
		public Keyword getIntIntKeyword_1_0() { return cIntIntKeyword_1_0; }
		
		//float?='float'?
		public Assignment getFloatAssignment_2() { return cFloatAssignment_2; }
		
		//'float'
		public Keyword getFloatFloatKeyword_2_0() { return cFloatFloatKeyword_2_0; }
		
		//string?='string'?
		public Assignment getStringAssignment_3() { return cStringAssignment_3; }
		
		//'string'
		public Keyword getStringStringKeyword_3_0() { return cStringStringKeyword_3_0; }
		
		//boolean?='boolean'?
		public Assignment getBooleanAssignment_4() { return cBooleanAssignment_4; }
		
		//'boolean'
		public Keyword getBooleanBooleanKeyword_4_0() { return cBooleanBooleanKeyword_4_0; }
		
		//name=ID
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_5_0() { return cNameIDTerminalRuleCall_5_0; }
		
		//'='?
		public Keyword getEqualsSignKeyword_6() { return cEqualsSignKeyword_6; }
		
		//value=AttributeValue?
		public Assignment getValueAssignment_7() { return cValueAssignment_7; }
		
		//AttributeValue
		public RuleCall getValueAttributeValueParserRuleCall_7_0() { return cValueAttributeValueParserRuleCall_7_0; }
		
		//';'
		public Keyword getSemicolonKeyword_8() { return cSemicolonKeyword_8; }
	}
	public class AttributeValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.AttributeValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cValueAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cValueSTRINGTerminalRuleCall_0_0 = (RuleCall)cValueAssignment_0.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cValueREALTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final Assignment cValueAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cValueNUMBERTerminalRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		private final Assignment cValueAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final Keyword cValueTrueKeyword_3_0 = (Keyword)cValueAssignment_3.eContents().get(0);
		private final Assignment cValueAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final Keyword cValueFalseKeyword_4_0 = (Keyword)cValueAssignment_4.eContents().get(0);
		
		//AttributeValue:
		//	value=STRING | value=REAL | value=NUMBER | value='true' | value='false';
		@Override public ParserRule getRule() { return rule; }
		
		//value=STRING | value=REAL | value=NUMBER | value='true' | value='false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//value=STRING
		public Assignment getValueAssignment_0() { return cValueAssignment_0; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_0_0() { return cValueSTRINGTerminalRuleCall_0_0; }
		
		//value=REAL
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }
		
		//REAL
		public RuleCall getValueREALTerminalRuleCall_1_0() { return cValueREALTerminalRuleCall_1_0; }
		
		//value=NUMBER
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//NUMBER
		public RuleCall getValueNUMBERTerminalRuleCall_2_0() { return cValueNUMBERTerminalRuleCall_2_0; }
		
		//value='true'
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }
		
		//'true'
		public Keyword getValueTrueKeyword_3_0() { return cValueTrueKeyword_3_0; }
		
		//value='false'
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }
		
		//'false'
		public Keyword getValueFalseKeyword_4_0() { return cValueFalseKeyword_4_0; }
	}
	public class FragmentAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.FragmentAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAttributeconstraintKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIntAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIntIntKeyword_1_0 = (Keyword)cIntAssignment_1.eContents().get(0);
		private final Assignment cFloatAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cFloatFloatKeyword_2_0 = (Keyword)cFloatAssignment_2.eContents().get(0);
		private final Assignment cStringAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cStringStringKeyword_3_0 = (Keyword)cStringAssignment_3.eContents().get(0);
		private final Assignment cBooleanAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Keyword cBooleanBooleanKeyword_4_0 = (Keyword)cBooleanAssignment_4.eContents().get(0);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameIDTerminalRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Assignment cGreaterAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final Keyword cGreaterGreaterThanSignKeyword_6_0 = (Keyword)cGreaterAssignment_6.eContents().get(0);
		private final Assignment cSmallerAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final Keyword cSmallerLessThanSignKeyword_7_0 = (Keyword)cSmallerAssignment_7.eContents().get(0);
		private final Assignment cGreaterequalsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final Keyword cGreaterequalsGreaterThanSignEqualsSignKeyword_8_0 = (Keyword)cGreaterequalsAssignment_8.eContents().get(0);
		private final Assignment cSmallerequalsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final Keyword cSmallerequalsLessThanSignEqualsSignKeyword_9_0 = (Keyword)cSmallerequalsAssignment_9.eContents().get(0);
		private final Assignment cEqualsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final Keyword cEqualsEqualsSignEqualsSignKeyword_10_0 = (Keyword)cEqualsAssignment_10.eContents().get(0);
		private final Assignment cNotequalsAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final Keyword cNotequalsExclamationMarkEqualsSignKeyword_11_0 = (Keyword)cNotequalsAssignment_11.eContents().get(0);
		private final Assignment cValueAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cValueAttributeValueParserRuleCall_12_0 = (RuleCall)cValueAssignment_12.eContents().get(0);
		private final Keyword cSemicolonKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//FragmentAttribute:
		//	'attributeconstraint' int?='int'? float?='float'? string?='string'? boolean?='boolean'? name=ID greater?='>'?
		//	smaller?='<'? greaterequals?='>='? smallerequals?='<='? equals?='=='? notequals?='!='? value=AttributeValue ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'attributeconstraint' int?='int'? float?='float'? string?='string'? boolean?='boolean'? name=ID greater?='>'?
		//smaller?='<'? greaterequals?='>='? smallerequals?='<='? equals?='=='? notequals?='!='? value=AttributeValue ';'
		public Group getGroup() { return cGroup; }
		
		//'attributeconstraint'
		public Keyword getAttributeconstraintKeyword_0() { return cAttributeconstraintKeyword_0; }
		
		//int?='int'?
		public Assignment getIntAssignment_1() { return cIntAssignment_1; }
		
		//'int'
		public Keyword getIntIntKeyword_1_0() { return cIntIntKeyword_1_0; }
		
		//float?='float'?
		public Assignment getFloatAssignment_2() { return cFloatAssignment_2; }
		
		//'float'
		public Keyword getFloatFloatKeyword_2_0() { return cFloatFloatKeyword_2_0; }
		
		//string?='string'?
		public Assignment getStringAssignment_3() { return cStringAssignment_3; }
		
		//'string'
		public Keyword getStringStringKeyword_3_0() { return cStringStringKeyword_3_0; }
		
		//boolean?='boolean'?
		public Assignment getBooleanAssignment_4() { return cBooleanAssignment_4; }
		
		//'boolean'
		public Keyword getBooleanBooleanKeyword_4_0() { return cBooleanBooleanKeyword_4_0; }
		
		//name=ID
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_5_0() { return cNameIDTerminalRuleCall_5_0; }
		
		//greater?='>'?
		public Assignment getGreaterAssignment_6() { return cGreaterAssignment_6; }
		
		//'>'
		public Keyword getGreaterGreaterThanSignKeyword_6_0() { return cGreaterGreaterThanSignKeyword_6_0; }
		
		//smaller?='<'?
		public Assignment getSmallerAssignment_7() { return cSmallerAssignment_7; }
		
		//'<'
		public Keyword getSmallerLessThanSignKeyword_7_0() { return cSmallerLessThanSignKeyword_7_0; }
		
		//greaterequals?='>='?
		public Assignment getGreaterequalsAssignment_8() { return cGreaterequalsAssignment_8; }
		
		//'>='
		public Keyword getGreaterequalsGreaterThanSignEqualsSignKeyword_8_0() { return cGreaterequalsGreaterThanSignEqualsSignKeyword_8_0; }
		
		//smallerequals?='<='?
		public Assignment getSmallerequalsAssignment_9() { return cSmallerequalsAssignment_9; }
		
		//'<='
		public Keyword getSmallerequalsLessThanSignEqualsSignKeyword_9_0() { return cSmallerequalsLessThanSignEqualsSignKeyword_9_0; }
		
		//equals?='=='?
		public Assignment getEqualsAssignment_10() { return cEqualsAssignment_10; }
		
		//'=='
		public Keyword getEqualsEqualsSignEqualsSignKeyword_10_0() { return cEqualsEqualsSignEqualsSignKeyword_10_0; }
		
		//notequals?='!='?
		public Assignment getNotequalsAssignment_11() { return cNotequalsAssignment_11; }
		
		//'!='
		public Keyword getNotequalsExclamationMarkEqualsSignKeyword_11_0() { return cNotequalsExclamationMarkEqualsSignKeyword_11_0; }
		
		//value=AttributeValue
		public Assignment getValueAssignment_12() { return cValueAssignment_12; }
		
		//AttributeValue
		public RuleCall getValueAttributeValueParserRuleCall_12_0() { return cValueAttributeValueParserRuleCall_12_0; }
		
		//';'
		public Keyword getSemicolonKeyword_13() { return cSemicolonKeyword_13; }
	}
	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Entity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEntityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAttributesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAttributesAttributeParserRuleCall_3_0 = (RuleCall)cAttributesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Entity:
		//	'entity' name=ID '{'
		//	attributes+=Attribute*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'entity' name=ID '{' attributes+=Attribute* '}'
		public Group getGroup() { return cGroup; }
		
		//'entity'
		public Keyword getEntityKeyword_0() { return cEntityKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//attributes+=Attribute*
		public Assignment getAttributesAssignment_3() { return cAttributesAssignment_3; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_3_0() { return cAttributesAttributeParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class FEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.FEntity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEntityconstraintKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAttributesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAttributesFragmentAttributeParserRuleCall_3_0 = (RuleCall)cAttributesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//FEntity:
		//	'entityconstraint' name=ID '{'
		//	attributes+=FragmentAttribute*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'entityconstraint' name=ID '{' attributes+=FragmentAttribute* '}'
		public Group getGroup() { return cGroup; }
		
		//'entityconstraint'
		public Keyword getEntityconstraintKeyword_0() { return cEntityconstraintKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//attributes+=FragmentAttribute*
		public Assignment getAttributesAssignment_3() { return cAttributesAssignment_3; }
		
		//FragmentAttribute
		public RuleCall getAttributesFragmentAttributeParserRuleCall_3_0() { return cAttributesFragmentAttributeParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class RelationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Relation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRelationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSenderAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cSenderEntityCrossReference_3_0 = (CrossReference)cSenderAssignment_3.eContents().get(0);
		private final RuleCall cSenderEntityIDTerminalRuleCall_3_0_1 = (RuleCall)cSenderEntityCrossReference_3_0.eContents().get(1);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cReceiverAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cReceiverEntityCrossReference_5_0 = (CrossReference)cReceiverAssignment_5.eContents().get(0);
		private final RuleCall cReceiverEntityIDTerminalRuleCall_5_0_1 = (RuleCall)cReceiverEntityCrossReference_5_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cAttributesAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cAttributesAttributeParserRuleCall_8_0 = (RuleCall)cAttributesAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Relation:
		//	'relation' name=ID '(' sender=[Entity] ',' receiver=[Entity] ')' '{'
		//	attributes+=Attribute*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'relation' name=ID '(' sender=[Entity] ',' receiver=[Entity] ')' '{' attributes+=Attribute* '}'
		public Group getGroup() { return cGroup; }
		
		//'relation'
		public Keyword getRelationKeyword_0() { return cRelationKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//sender=[Entity]
		public Assignment getSenderAssignment_3() { return cSenderAssignment_3; }
		
		//[Entity]
		public CrossReference getSenderEntityCrossReference_3_0() { return cSenderEntityCrossReference_3_0; }
		
		//ID
		public RuleCall getSenderEntityIDTerminalRuleCall_3_0_1() { return cSenderEntityIDTerminalRuleCall_3_0_1; }
		
		//','
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//receiver=[Entity]
		public Assignment getReceiverAssignment_5() { return cReceiverAssignment_5; }
		
		//[Entity]
		public CrossReference getReceiverEntityCrossReference_5_0() { return cReceiverEntityCrossReference_5_0; }
		
		//ID
		public RuleCall getReceiverEntityIDTerminalRuleCall_5_0_1() { return cReceiverEntityIDTerminalRuleCall_5_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }
		
		//attributes+=Attribute*
		public Assignment getAttributesAssignment_8() { return cAttributesAssignment_8; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_8_0() { return cAttributesAttributeParserRuleCall_8_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class FRelationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.FRelation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRelationconstraintKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSenderAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cSenderFEntityCrossReference_3_0 = (CrossReference)cSenderAssignment_3.eContents().get(0);
		private final RuleCall cSenderFEntityIDTerminalRuleCall_3_0_1 = (RuleCall)cSenderFEntityCrossReference_3_0.eContents().get(1);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cReceiverAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cReceiverFEntityCrossReference_5_0 = (CrossReference)cReceiverAssignment_5.eContents().get(0);
		private final RuleCall cReceiverFEntityIDTerminalRuleCall_5_0_1 = (RuleCall)cReceiverFEntityCrossReference_5_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cAttributesAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cAttributesFragmentAttributeParserRuleCall_8_0 = (RuleCall)cAttributesAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//FRelation:
		//	'relationconstraint' name=ID '(' sender=[FEntity] ',' receiver=[FEntity] ')' '{'
		//	attributes+=FragmentAttribute*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'relationconstraint' name=ID '(' sender=[FEntity] ',' receiver=[FEntity] ')' '{' attributes+=FragmentAttribute* '}'
		public Group getGroup() { return cGroup; }
		
		//'relationconstraint'
		public Keyword getRelationconstraintKeyword_0() { return cRelationconstraintKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//sender=[FEntity]
		public Assignment getSenderAssignment_3() { return cSenderAssignment_3; }
		
		//[FEntity]
		public CrossReference getSenderFEntityCrossReference_3_0() { return cSenderFEntityCrossReference_3_0; }
		
		//ID
		public RuleCall getSenderFEntityIDTerminalRuleCall_3_0_1() { return cSenderFEntityIDTerminalRuleCall_3_0_1; }
		
		//','
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//receiver=[FEntity]
		public Assignment getReceiverAssignment_5() { return cReceiverAssignment_5; }
		
		//[FEntity]
		public CrossReference getReceiverFEntityCrossReference_5_0() { return cReceiverFEntityCrossReference_5_0; }
		
		//ID
		public RuleCall getReceiverFEntityIDTerminalRuleCall_5_0_1() { return cReceiverFEntityIDTerminalRuleCall_5_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }
		
		//attributes+=FragmentAttribute*
		public Assignment getAttributesAssignment_8() { return cAttributesAssignment_8; }
		
		//FragmentAttribute
		public RuleCall getAttributesFragmentAttributeParserRuleCall_8_0() { return cAttributesFragmentAttributeParserRuleCall_8_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class ScenarioElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Scenario");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cScenarioKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cScenariocontentsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cScenariocontentsScenarioContentParserRuleCall_3_0 = (RuleCall)cScenariocontentsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Scenario:
		//	'scenario' name=ID '{'
		//	scenariocontents+=ScenarioContent*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'scenario' name=ID '{' scenariocontents+=ScenarioContent* '}'
		public Group getGroup() { return cGroup; }
		
		//'scenario'
		public Keyword getScenarioKeyword_0() { return cScenarioKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//scenariocontents+=ScenarioContent*
		public Assignment getScenariocontentsAssignment_3() { return cScenariocontentsAssignment_3; }
		
		//ScenarioContent
		public RuleCall getScenariocontentsScenarioContentParserRuleCall_3_0() { return cScenariocontentsScenarioContentParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ScenarioContentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ScenarioContent");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cAltAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cAltAltParserRuleCall_0_0 = (RuleCall)cAltAssignment_0.eContents().get(0);
		private final Assignment cMessageAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cMessageMessageParserRuleCall_1_0 = (RuleCall)cMessageAssignment_1.eContents().get(0);
		private final Assignment cParAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cParParParserRuleCall_2_0 = (RuleCall)cParAssignment_2.eContents().get(0);
		private final Assignment cLoopAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cLoopLoopParserRuleCall_3_0 = (RuleCall)cLoopAssignment_3.eContents().get(0);
		private final Assignment cContextmessageAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cContextmessageContextMessageParserRuleCall_4_0 = (RuleCall)cContextmessageAssignment_4.eContents().get(0);
		private final Assignment cParamConstraintAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final RuleCall cParamConstraintParameterConstraintParserRuleCall_5_0 = (RuleCall)cParamConstraintAssignment_5.eContents().get(0);
		private final Assignment cAssertentityAssignment_6 = (Assignment)cAlternatives.eContents().get(6);
		private final RuleCall cAssertentityAssertionEntityParserRuleCall_6_0 = (RuleCall)cAssertentityAssignment_6.eContents().get(0);
		private final Assignment cAssertrelationAssignment_7 = (Assignment)cAlternatives.eContents().get(7);
		private final RuleCall cAssertrelationAssertionRelationParserRuleCall_7_0 = (RuleCall)cAssertrelationAssignment_7.eContents().get(0);
		
		//ScenarioContent:
		//	alt+=Alt | message+=Message | par+=Par | loop+=Loop | contextmessage+=ContextMessage |
		//	paramConstraint+=ParameterConstraint
		//	| assertentity+=AssertionEntity | assertrelation+=AssertionRelation;
		@Override public ParserRule getRule() { return rule; }
		
		//alt+=Alt | message+=Message | par+=Par | loop+=Loop | contextmessage+=ContextMessage |
		//paramConstraint+=ParameterConstraint | assertentity+=AssertionEntity | assertrelation+=AssertionRelation
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//alt+=Alt
		public Assignment getAltAssignment_0() { return cAltAssignment_0; }
		
		//Alt
		public RuleCall getAltAltParserRuleCall_0_0() { return cAltAltParserRuleCall_0_0; }
		
		//message+=Message
		public Assignment getMessageAssignment_1() { return cMessageAssignment_1; }
		
		//Message
		public RuleCall getMessageMessageParserRuleCall_1_0() { return cMessageMessageParserRuleCall_1_0; }
		
		//par+=Par
		public Assignment getParAssignment_2() { return cParAssignment_2; }
		
		//Par
		public RuleCall getParParParserRuleCall_2_0() { return cParParParserRuleCall_2_0; }
		
		//loop+=Loop
		public Assignment getLoopAssignment_3() { return cLoopAssignment_3; }
		
		//Loop
		public RuleCall getLoopLoopParserRuleCall_3_0() { return cLoopLoopParserRuleCall_3_0; }
		
		//contextmessage+=ContextMessage
		public Assignment getContextmessageAssignment_4() { return cContextmessageAssignment_4; }
		
		//ContextMessage
		public RuleCall getContextmessageContextMessageParserRuleCall_4_0() { return cContextmessageContextMessageParserRuleCall_4_0; }
		
		//paramConstraint+=ParameterConstraint
		public Assignment getParamConstraintAssignment_5() { return cParamConstraintAssignment_5; }
		
		//ParameterConstraint
		public RuleCall getParamConstraintParameterConstraintParserRuleCall_5_0() { return cParamConstraintParameterConstraintParserRuleCall_5_0; }
		
		//assertentity+=AssertionEntity
		public Assignment getAssertentityAssignment_6() { return cAssertentityAssignment_6; }
		
		//AssertionEntity
		public RuleCall getAssertentityAssertionEntityParserRuleCall_6_0() { return cAssertentityAssertionEntityParserRuleCall_6_0; }
		
		//assertrelation+=AssertionRelation
		public Assignment getAssertrelationAssignment_7() { return cAssertrelationAssignment_7; }
		
		//AssertionRelation
		public RuleCall getAssertrelationAssertionRelationParserRuleCall_7_0() { return cAssertrelationAssertionRelationParserRuleCall_7_0; }
	}
	public class MessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Message");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMessageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cParamsAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cParamsParamsParserRuleCall_3_0_0 = (RuleCall)cParamsAssignment_3_0.eContents().get(0);
		private final Assignment cConstantparamsAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cConstantparamsConstantParamsParserRuleCall_3_1_0 = (RuleCall)cConstantparamsAssignment_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cRequiredAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final Keyword cRequiredRequiredKeyword_5_0 = (Keyword)cRequiredAssignment_5.eContents().get(0);
		private final Assignment cFailAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final Keyword cFailFailKeyword_6_0 = (Keyword)cFailAssignment_6.eContents().get(0);
		private final Assignment cStrictAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final Keyword cStrictStrictKeyword_7_0 = (Keyword)cStrictAssignment_7.eContents().get(0);
		private final Assignment cSenderAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cSenderObjectCrossReference_8_0 = (CrossReference)cSenderAssignment_8.eContents().get(0);
		private final RuleCall cSenderObjectIDTerminalRuleCall_8_0_1 = (RuleCall)cSenderObjectCrossReference_8_0.eContents().get(1);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cReceiverAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final CrossReference cReceiverObjectCrossReference_10_0 = (CrossReference)cReceiverAssignment_10.eContents().get(0);
		private final RuleCall cReceiverObjectIDTerminalRuleCall_10_0_1 = (RuleCall)cReceiverObjectCrossReference_10_0.eContents().get(1);
		private final Assignment cPastAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final Keyword cPastPastConstraintKeyword_11_0 = (Keyword)cPastAssignment_11.eContents().get(0);
		private final Assignment cFutureAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final Keyword cFutureFutureConstraintKeyword_12_0 = (Keyword)cFutureAssignment_12.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cCAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final CrossReference cCConstraintCrossReference_14_0 = (CrossReference)cCAssignment_14.eContents().get(0);
		private final RuleCall cCConstraintIDTerminalRuleCall_14_0_1 = (RuleCall)cCConstraintCrossReference_14_0.eContents().get(1);
		private final Keyword cCommaKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cConstraintexpAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cConstraintexpClockConstraintExpressionParserRuleCall_16_0 = (RuleCall)cConstraintexpAssignment_16.eContents().get(0);
		private final Keyword cCommaKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Assignment cResetinconstraintAssignment_18 = (Assignment)cGroup.eContents().get(18);
		private final RuleCall cResetinconstraintResetClockParserRuleCall_18_0 = (RuleCall)cResetinconstraintAssignment_18.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_19 = (Keyword)cGroup.eContents().get(19);
		private final Assignment cClockconstraintAssignment_20 = (Assignment)cGroup.eContents().get(20);
		private final Keyword cClockconstraintClockConstraintKeyword_20_0 = (Keyword)cClockconstraintAssignment_20.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_21 = (Keyword)cGroup.eContents().get(21);
		private final Assignment cCConstraintAssignment_22 = (Assignment)cGroup.eContents().get(22);
		private final RuleCall cCConstraintClockConstraintExpressionParserRuleCall_22_0 = (RuleCall)cCConstraintAssignment_22.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_23 = (Keyword)cGroup.eContents().get(23);
		private final Assignment cResetclockAssignment_24 = (Assignment)cGroup.eContents().get(24);
		private final RuleCall cResetclockResetClockParserRuleCall_24_0 = (RuleCall)cResetclockAssignment_24.eContents().get(0);
		private final Keyword cSemicolonKeyword_25 = (Keyword)cGroup.eContents().get(25);
		
		//Message:
		//	'message' name=ID '(' (params+=Params | constantparams+=ConstantParams) ')' required?='required'? fail?='fail'?
		//	strict?='strict'?
		//	sender=[Object] '->' receiver=[Object] past?='pastConstraint'? future?='futureConstraint'?
		//	'{'? c=[Constraint]? ','? constraintexp=ClockConstraintExpression? ','? resetinconstraint=ResetClock? '}'?
		//	clockconstraint?='clockConstraint'?
		//	'{'? cConstraint=ClockConstraintExpression? '}'?
		//	resetclock=ResetClock? ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'message' name=ID '(' (params+=Params | constantparams+=ConstantParams) ')' required?='required'? fail?='fail'?
		//strict?='strict'? sender=[Object] '->' receiver=[Object] past?='pastConstraint'? future?='futureConstraint'? '{'?
		//c=[Constraint]? ','? constraintexp=ClockConstraintExpression? ','? resetinconstraint=ResetClock? '}'?
		//clockconstraint?='clockConstraint'? '{'? cConstraint=ClockConstraintExpression? '}'? resetclock=ResetClock? ';'
		public Group getGroup() { return cGroup; }
		
		//'message'
		public Keyword getMessageKeyword_0() { return cMessageKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//params+=Params | constantparams+=ConstantParams
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//params+=Params
		public Assignment getParamsAssignment_3_0() { return cParamsAssignment_3_0; }
		
		//Params
		public RuleCall getParamsParamsParserRuleCall_3_0_0() { return cParamsParamsParserRuleCall_3_0_0; }
		
		//constantparams+=ConstantParams
		public Assignment getConstantparamsAssignment_3_1() { return cConstantparamsAssignment_3_1; }
		
		//ConstantParams
		public RuleCall getConstantparamsConstantParamsParserRuleCall_3_1_0() { return cConstantparamsConstantParamsParserRuleCall_3_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
		
		//required?='required'?
		public Assignment getRequiredAssignment_5() { return cRequiredAssignment_5; }
		
		//'required'
		public Keyword getRequiredRequiredKeyword_5_0() { return cRequiredRequiredKeyword_5_0; }
		
		//fail?='fail'?
		public Assignment getFailAssignment_6() { return cFailAssignment_6; }
		
		//'fail'
		public Keyword getFailFailKeyword_6_0() { return cFailFailKeyword_6_0; }
		
		//strict?='strict'?
		public Assignment getStrictAssignment_7() { return cStrictAssignment_7; }
		
		//'strict'
		public Keyword getStrictStrictKeyword_7_0() { return cStrictStrictKeyword_7_0; }
		
		//sender=[Object]
		public Assignment getSenderAssignment_8() { return cSenderAssignment_8; }
		
		//[Object]
		public CrossReference getSenderObjectCrossReference_8_0() { return cSenderObjectCrossReference_8_0; }
		
		//ID
		public RuleCall getSenderObjectIDTerminalRuleCall_8_0_1() { return cSenderObjectIDTerminalRuleCall_8_0_1; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_9() { return cHyphenMinusGreaterThanSignKeyword_9; }
		
		//receiver=[Object]
		public Assignment getReceiverAssignment_10() { return cReceiverAssignment_10; }
		
		//[Object]
		public CrossReference getReceiverObjectCrossReference_10_0() { return cReceiverObjectCrossReference_10_0; }
		
		//ID
		public RuleCall getReceiverObjectIDTerminalRuleCall_10_0_1() { return cReceiverObjectIDTerminalRuleCall_10_0_1; }
		
		//past?='pastConstraint'?
		public Assignment getPastAssignment_11() { return cPastAssignment_11; }
		
		//'pastConstraint'
		public Keyword getPastPastConstraintKeyword_11_0() { return cPastPastConstraintKeyword_11_0; }
		
		//future?='futureConstraint'?
		public Assignment getFutureAssignment_12() { return cFutureAssignment_12; }
		
		//'futureConstraint'
		public Keyword getFutureFutureConstraintKeyword_12_0() { return cFutureFutureConstraintKeyword_12_0; }
		
		//'{'?
		public Keyword getLeftCurlyBracketKeyword_13() { return cLeftCurlyBracketKeyword_13; }
		
		//c=[Constraint]?
		public Assignment getCAssignment_14() { return cCAssignment_14; }
		
		//[Constraint]
		public CrossReference getCConstraintCrossReference_14_0() { return cCConstraintCrossReference_14_0; }
		
		//ID
		public RuleCall getCConstraintIDTerminalRuleCall_14_0_1() { return cCConstraintIDTerminalRuleCall_14_0_1; }
		
		//','?
		public Keyword getCommaKeyword_15() { return cCommaKeyword_15; }
		
		//constraintexp=ClockConstraintExpression?
		public Assignment getConstraintexpAssignment_16() { return cConstraintexpAssignment_16; }
		
		//ClockConstraintExpression
		public RuleCall getConstraintexpClockConstraintExpressionParserRuleCall_16_0() { return cConstraintexpClockConstraintExpressionParserRuleCall_16_0; }
		
		//','?
		public Keyword getCommaKeyword_17() { return cCommaKeyword_17; }
		
		//resetinconstraint=ResetClock?
		public Assignment getResetinconstraintAssignment_18() { return cResetinconstraintAssignment_18; }
		
		//ResetClock
		public RuleCall getResetinconstraintResetClockParserRuleCall_18_0() { return cResetinconstraintResetClockParserRuleCall_18_0; }
		
		//'}'?
		public Keyword getRightCurlyBracketKeyword_19() { return cRightCurlyBracketKeyword_19; }
		
		//clockconstraint?='clockConstraint'?
		public Assignment getClockconstraintAssignment_20() { return cClockconstraintAssignment_20; }
		
		//'clockConstraint'
		public Keyword getClockconstraintClockConstraintKeyword_20_0() { return cClockconstraintClockConstraintKeyword_20_0; }
		
		//'{'?
		public Keyword getLeftCurlyBracketKeyword_21() { return cLeftCurlyBracketKeyword_21; }
		
		//cConstraint=ClockConstraintExpression?
		public Assignment getCConstraintAssignment_22() { return cCConstraintAssignment_22; }
		
		//ClockConstraintExpression
		public RuleCall getCConstraintClockConstraintExpressionParserRuleCall_22_0() { return cCConstraintClockConstraintExpressionParserRuleCall_22_0; }
		
		//'}'?
		public Keyword getRightCurlyBracketKeyword_23() { return cRightCurlyBracketKeyword_23; }
		
		//resetclock=ResetClock?
		public Assignment getResetclockAssignment_24() { return cResetclockAssignment_24; }
		
		//ResetClock
		public RuleCall getResetclockResetClockParserRuleCall_24_0() { return cResetclockResetClockParserRuleCall_24_0; }
		
		//';'
		public Keyword getSemicolonKeyword_25() { return cSemicolonKeyword_25; }
	}
	public class ResetClockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ResetClock");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cResetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cClockAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cClockClockCrossReference_1_0 = (CrossReference)cClockAssignment_1.eContents().get(0);
		private final RuleCall cClockClockIDTerminalRuleCall_1_0_1 = (RuleCall)cClockClockCrossReference_1_0.eContents().get(1);
		
		//ResetClock:
		//	'reset' clock=[Clock];
		@Override public ParserRule getRule() { return rule; }
		
		//'reset' clock=[Clock]
		public Group getGroup() { return cGroup; }
		
		//'reset'
		public Keyword getResetKeyword_0() { return cResetKeyword_0; }
		
		//clock=[Clock]
		public Assignment getClockAssignment_1() { return cClockAssignment_1; }
		
		//[Clock]
		public CrossReference getClockClockCrossReference_1_0() { return cClockClockCrossReference_1_0; }
		
		//ID
		public RuleCall getClockClockIDTerminalRuleCall_1_0_1() { return cClockClockIDTerminalRuleCall_1_0_1; }
	}
	public class ClockConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ClockConstraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cClockAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cClockClockCrossReference_0_0 = (CrossReference)cClockAssignment_0.eContents().get(0);
		private final RuleCall cClockClockIDTerminalRuleCall_0_0_1 = (RuleCall)cClockClockCrossReference_0_0.eContents().get(1);
		private final Assignment cOpAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOpOperatorParserRuleCall_1_0 = (RuleCall)cOpAssignment_1.eContents().get(0);
		private final Assignment cConstantAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cConstantNUMBERTerminalRuleCall_2_0 = (RuleCall)cConstantAssignment_2.eContents().get(0);
		
		//ClockConstraint:
		//	clock=[Clock] op=Operator constant=NUMBER;
		@Override public ParserRule getRule() { return rule; }
		
		//clock=[Clock] op=Operator constant=NUMBER
		public Group getGroup() { return cGroup; }
		
		//clock=[Clock]
		public Assignment getClockAssignment_0() { return cClockAssignment_0; }
		
		//[Clock]
		public CrossReference getClockClockCrossReference_0_0() { return cClockClockCrossReference_0_0; }
		
		//ID
		public RuleCall getClockClockIDTerminalRuleCall_0_0_1() { return cClockClockIDTerminalRuleCall_0_0_1; }
		
		//op=Operator
		public Assignment getOpAssignment_1() { return cOpAssignment_1; }
		
		//Operator
		public RuleCall getOpOperatorParserRuleCall_1_0() { return cOpOperatorParserRuleCall_1_0; }
		
		//constant=NUMBER
		public Assignment getConstantAssignment_2() { return cConstantAssignment_2; }
		
		//NUMBER
		public RuleCall getConstantNUMBERTerminalRuleCall_2_0() { return cConstantNUMBERTerminalRuleCall_2_0; }
	}
	public class ClockConstraintExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ClockConstraintExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cNotAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final Keyword cNotNotKeyword_0_0_0 = (Keyword)cNotAssignment_0_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cLclockconstraintAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cLclockconstraintClockConstraintParserRuleCall_0_2_0 = (RuleCall)cLclockconstraintAssignment_0_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cLclockconstraintAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cLclockconstraintClockConstraintParserRuleCall_1_0_0 = (RuleCall)cLclockconstraintAssignment_1_0.eContents().get(0);
		private final Keyword cAndKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cRclockconstraintAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cRclockconstraintClockConstraintParserRuleCall_1_2_0 = (RuleCall)cRclockconstraintAssignment_1_2.eContents().get(0);
		
		//ClockConstraintExpression:
		//	not?='not'? '('? lclockconstraint=ClockConstraint ')'?
		//	| lclockconstraint=ClockConstraint 'and' rclockconstraint=ClockConstraint;
		@Override public ParserRule getRule() { return rule; }
		
		//not?='not'? '('? lclockconstraint=ClockConstraint ')'? | lclockconstraint=ClockConstraint 'and'
		//rclockconstraint=ClockConstraint
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//not?='not'? '('? lclockconstraint=ClockConstraint ')'?
		public Group getGroup_0() { return cGroup_0; }
		
		//not?='not'?
		public Assignment getNotAssignment_0_0() { return cNotAssignment_0_0; }
		
		//'not'
		public Keyword getNotNotKeyword_0_0_0() { return cNotNotKeyword_0_0_0; }
		
		//'('?
		public Keyword getLeftParenthesisKeyword_0_1() { return cLeftParenthesisKeyword_0_1; }
		
		//lclockconstraint=ClockConstraint
		public Assignment getLclockconstraintAssignment_0_2() { return cLclockconstraintAssignment_0_2; }
		
		//ClockConstraint
		public RuleCall getLclockconstraintClockConstraintParserRuleCall_0_2_0() { return cLclockconstraintClockConstraintParserRuleCall_0_2_0; }
		
		//')'?
		public Keyword getRightParenthesisKeyword_0_3() { return cRightParenthesisKeyword_0_3; }
		
		//lclockconstraint=ClockConstraint 'and' rclockconstraint=ClockConstraint
		public Group getGroup_1() { return cGroup_1; }
		
		//lclockconstraint=ClockConstraint
		public Assignment getLclockconstraintAssignment_1_0() { return cLclockconstraintAssignment_1_0; }
		
		//ClockConstraint
		public RuleCall getLclockconstraintClockConstraintParserRuleCall_1_0_0() { return cLclockconstraintClockConstraintParserRuleCall_1_0_0; }
		
		//'and'
		public Keyword getAndKeyword_1_1() { return cAndKeyword_1_1; }
		
		//rclockconstraint=ClockConstraint
		public Assignment getRclockconstraintAssignment_1_2() { return cRclockconstraintAssignment_1_2; }
		
		//ClockConstraint
		public RuleCall getRclockconstraintClockConstraintParserRuleCall_1_2_0() { return cRclockconstraintClockConstraintParserRuleCall_1_2_0; }
	}
	public class ContextMessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ContextMessage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cContentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cContentContextMessageContentParserRuleCall_0_0 = (RuleCall)cContentAssignment_0.eContents().get(0);
		private final Assignment cRequiredAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cRequiredRequiredKeyword_1_0 = (Keyword)cRequiredAssignment_1.eContents().get(0);
		private final Assignment cFailAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cFailFailKeyword_2_0 = (Keyword)cFailAssignment_2.eContents().get(0);
		private final Assignment cStrictAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cStrictStrictKeyword_3_0 = (Keyword)cStrictAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ContextMessage:
		//	content+=ContextMessageContent
		//	required?='required'? fail?='fail'? strict?='strict'?
		//	';';
		@Override public ParserRule getRule() { return rule; }
		
		//content+=ContextMessageContent required?='required'? fail?='fail'? strict?='strict'? ';'
		public Group getGroup() { return cGroup; }
		
		//content+=ContextMessageContent
		public Assignment getContentAssignment_0() { return cContentAssignment_0; }
		
		//ContextMessageContent
		public RuleCall getContentContextMessageContentParserRuleCall_0_0() { return cContentContextMessageContentParserRuleCall_0_0; }
		
		//required?='required'?
		public Assignment getRequiredAssignment_1() { return cRequiredAssignment_1; }
		
		//'required'
		public Keyword getRequiredRequiredKeyword_1_0() { return cRequiredRequiredKeyword_1_0; }
		
		//fail?='fail'?
		public Assignment getFailAssignment_2() { return cFailAssignment_2; }
		
		//'fail'
		public Keyword getFailFailKeyword_2_0() { return cFailFailKeyword_2_0; }
		
		//strict?='strict'?
		public Assignment getStrictAssignment_3() { return cStrictAssignment_3; }
		
		//'strict'
		public Keyword getStrictStrictKeyword_3_0() { return cStrictStrictKeyword_3_0; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class ContextMessageContentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ContextMessageContent");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cMatchAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cMatchMatchMessageParserRuleCall_0_0 = (RuleCall)cMatchAssignment_0.eContents().get(0);
		private final Assignment cChangeAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cChangeChangeMessageParserRuleCall_1_0 = (RuleCall)cChangeAssignment_1.eContents().get(0);
		
		//ContextMessageContent:
		//	match+=MatchMessage | change+=ChangeMessage;
		@Override public ParserRule getRule() { return rule; }
		
		//match+=MatchMessage | change+=ChangeMessage
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//match+=MatchMessage
		public Assignment getMatchAssignment_0() { return cMatchAssignment_0; }
		
		//MatchMessage
		public RuleCall getMatchMatchMessageParserRuleCall_0_0() { return cMatchMatchMessageParserRuleCall_0_0; }
		
		//change+=ChangeMessage
		public Assignment getChangeAssignment_1() { return cChangeAssignment_1; }
		
		//ChangeMessage
		public RuleCall getChangeChangeMessageParserRuleCall_1_0() { return cChangeChangeMessageParserRuleCall_1_0; }
	}
	public class MatchMessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.MatchMessage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMatchKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cContextAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cContextContextModelCrossReference_2_0 = (CrossReference)cContextAssignment_2.eContents().get(0);
		private final RuleCall cContextContextModelIDTerminalRuleCall_2_0_1 = (RuleCall)cContextContextModelCrossReference_2_0.eContents().get(1);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cContentAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cContentContextFragmentCrossReference_4_0 = (CrossReference)cContentAssignment_4.eContents().get(0);
		private final RuleCall cContentContextFragmentIDTerminalRuleCall_4_0_1 = (RuleCall)cContentContextFragmentCrossReference_4_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//MatchMessage:
		//	'match' '(' context=[ContextModel]? ','? content=[ContextFragment]? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'match' '(' context=[ContextModel]? ','? content=[ContextFragment]? ')'
		public Group getGroup() { return cGroup; }
		
		//'match'
		public Keyword getMatchKeyword_0() { return cMatchKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//context=[ContextModel]?
		public Assignment getContextAssignment_2() { return cContextAssignment_2; }
		
		//[ContextModel]
		public CrossReference getContextContextModelCrossReference_2_0() { return cContextContextModelCrossReference_2_0; }
		
		//ID
		public RuleCall getContextContextModelIDTerminalRuleCall_2_0_1() { return cContextContextModelIDTerminalRuleCall_2_0_1; }
		
		//','?
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//content=[ContextFragment]?
		public Assignment getContentAssignment_4() { return cContentAssignment_4; }
		
		//[ContextFragment]
		public CrossReference getContentContextFragmentCrossReference_4_0() { return cContentContextFragmentCrossReference_4_0; }
		
		//ID
		public RuleCall getContentContextFragmentIDTerminalRuleCall_4_0_1() { return cContentContextFragmentIDTerminalRuleCall_4_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class ChangeMessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ChangeMessage");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cDisappearAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cDisappearDisappearMessageParserRuleCall_0_0 = (RuleCall)cDisappearAssignment_0.eContents().get(0);
		private final Assignment cAppearAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cAppearAppearMessageParserRuleCall_1_0 = (RuleCall)cAppearAssignment_1.eContents().get(0);
		private final Assignment cChangetoAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cChangetoChangeToMessageParserRuleCall_2_0 = (RuleCall)cChangetoAssignment_2.eContents().get(0);
		private final Assignment cChangetorAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cChangetorChangeToRelationParserRuleCall_3_0 = (RuleCall)cChangetorAssignment_3.eContents().get(0);
		
		//ChangeMessage:
		//	disappear+=DisappearMessage | appear+=AppearMessage | changeto+=ChangeToMessage | changetor+=ChangeToRelation;
		@Override public ParserRule getRule() { return rule; }
		
		//disappear+=DisappearMessage | appear+=AppearMessage | changeto+=ChangeToMessage | changetor+=ChangeToRelation
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//disappear+=DisappearMessage
		public Assignment getDisappearAssignment_0() { return cDisappearAssignment_0; }
		
		//DisappearMessage
		public RuleCall getDisappearDisappearMessageParserRuleCall_0_0() { return cDisappearDisappearMessageParserRuleCall_0_0; }
		
		//appear+=AppearMessage
		public Assignment getAppearAssignment_1() { return cAppearAssignment_1; }
		
		//AppearMessage
		public RuleCall getAppearAppearMessageParserRuleCall_1_0() { return cAppearAppearMessageParserRuleCall_1_0; }
		
		//changeto+=ChangeToMessage
		public Assignment getChangetoAssignment_2() { return cChangetoAssignment_2; }
		
		//ChangeToMessage
		public RuleCall getChangetoChangeToMessageParserRuleCall_2_0() { return cChangetoChangeToMessageParserRuleCall_2_0; }
		
		//changetor+=ChangeToRelation
		public Assignment getChangetorAssignment_3() { return cChangetorAssignment_3; }
		
		//ChangeToRelation
		public RuleCall getChangetorChangeToRelationParserRuleCall_3_0() { return cChangetorChangeToRelationParserRuleCall_3_0; }
	}
	public class AppearMessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.AppearMessage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAppearKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cContextAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final CrossReference cContextContextModelCrossReference_2_0_0 = (CrossReference)cContextAssignment_2_0.eContents().get(0);
		private final RuleCall cContextContextModelIDTerminalRuleCall_2_0_0_1 = (RuleCall)cContextContextModelCrossReference_2_0_0.eContents().get(1);
		private final Keyword cFullStopKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cEntityAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final CrossReference cEntityEntityCrossReference_2_2_0 = (CrossReference)cEntityAssignment_2_2.eContents().get(0);
		private final RuleCall cEntityEntityIDTerminalRuleCall_2_2_0_1 = (RuleCall)cEntityEntityCrossReference_2_2_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//AppearMessage:
		//	'appear' '(' (context=[ContextModel] '.' entity=[Entity])? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'appear' '(' (context=[ContextModel] '.' entity=[Entity])? ')'
		public Group getGroup() { return cGroup; }
		
		//'appear'
		public Keyword getAppearKeyword_0() { return cAppearKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//(context=[ContextModel] '.' entity=[Entity])?
		public Group getGroup_2() { return cGroup_2; }
		
		//context=[ContextModel]
		public Assignment getContextAssignment_2_0() { return cContextAssignment_2_0; }
		
		//[ContextModel]
		public CrossReference getContextContextModelCrossReference_2_0_0() { return cContextContextModelCrossReference_2_0_0; }
		
		//ID
		public RuleCall getContextContextModelIDTerminalRuleCall_2_0_0_1() { return cContextContextModelIDTerminalRuleCall_2_0_0_1; }
		
		//'.'
		public Keyword getFullStopKeyword_2_1() { return cFullStopKeyword_2_1; }
		
		//entity=[Entity]
		public Assignment getEntityAssignment_2_2() { return cEntityAssignment_2_2; }
		
		//[Entity]
		public CrossReference getEntityEntityCrossReference_2_2_0() { return cEntityEntityCrossReference_2_2_0; }
		
		//ID
		public RuleCall getEntityEntityIDTerminalRuleCall_2_2_0_1() { return cEntityEntityIDTerminalRuleCall_2_2_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class DisappearMessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.DisappearMessage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDisappearKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cContextAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final CrossReference cContextContextModelCrossReference_2_0_0 = (CrossReference)cContextAssignment_2_0.eContents().get(0);
		private final RuleCall cContextContextModelIDTerminalRuleCall_2_0_0_1 = (RuleCall)cContextContextModelCrossReference_2_0_0.eContents().get(1);
		private final Keyword cFullStopKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cEntityAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final CrossReference cEntityEntityCrossReference_2_2_0 = (CrossReference)cEntityAssignment_2_2.eContents().get(0);
		private final RuleCall cEntityEntityIDTerminalRuleCall_2_2_0_1 = (RuleCall)cEntityEntityCrossReference_2_2_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//DisappearMessage:
		//	'disappear' '(' (context=[ContextModel] '.' entity=[Entity])? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'disappear' '(' (context=[ContextModel] '.' entity=[Entity])? ')'
		public Group getGroup() { return cGroup; }
		
		//'disappear'
		public Keyword getDisappearKeyword_0() { return cDisappearKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//(context=[ContextModel] '.' entity=[Entity])?
		public Group getGroup_2() { return cGroup_2; }
		
		//context=[ContextModel]
		public Assignment getContextAssignment_2_0() { return cContextAssignment_2_0; }
		
		//[ContextModel]
		public CrossReference getContextContextModelCrossReference_2_0_0() { return cContextContextModelCrossReference_2_0_0; }
		
		//ID
		public RuleCall getContextContextModelIDTerminalRuleCall_2_0_0_1() { return cContextContextModelIDTerminalRuleCall_2_0_0_1; }
		
		//'.'
		public Keyword getFullStopKeyword_2_1() { return cFullStopKeyword_2_1; }
		
		//entity=[Entity]
		public Assignment getEntityAssignment_2_2() { return cEntityAssignment_2_2; }
		
		//[Entity]
		public CrossReference getEntityEntityCrossReference_2_2_0() { return cEntityEntityCrossReference_2_2_0; }
		
		//ID
		public RuleCall getEntityEntityIDTerminalRuleCall_2_2_0_1() { return cEntityEntityIDTerminalRuleCall_2_2_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class ChangeToMessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ChangeToMessage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChangeToKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cContextAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final CrossReference cContextContextModelCrossReference_2_0_0 = (CrossReference)cContextAssignment_2_0.eContents().get(0);
		private final RuleCall cContextContextModelIDTerminalRuleCall_2_0_0_1 = (RuleCall)cContextContextModelCrossReference_2_0_0.eContents().get(1);
		private final Keyword cFullStopKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cEntityAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final CrossReference cEntityEntityCrossReference_2_2_0 = (CrossReference)cEntityAssignment_2_2.eContents().get(0);
		private final RuleCall cEntityEntityIDTerminalRuleCall_2_2_0_1 = (RuleCall)cEntityEntityCrossReference_2_2_0.eContents().get(1);
		private final Keyword cFullStopKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Assignment cAttributeAssignment_2_4 = (Assignment)cGroup_2.eContents().get(4);
		private final CrossReference cAttributeAttributeCrossReference_2_4_0 = (CrossReference)cAttributeAssignment_2_4.eContents().get(0);
		private final RuleCall cAttributeAttributeIDTerminalRuleCall_2_4_0_1 = (RuleCall)cAttributeAttributeCrossReference_2_4_0.eContents().get(1);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cChangevalueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cChangevalueAttributeValueParserRuleCall_4_0 = (RuleCall)cChangevalueAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ChangeToMessage:
		//	'changeTo' '(' (context=[ContextModel] '.' entity=[Entity] '.' attribute=[Attribute])? ','?
		//	changevalue=AttributeValue? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'changeTo' '(' (context=[ContextModel] '.' entity=[Entity] '.' attribute=[Attribute])? ','? changevalue=AttributeValue?
		//')'
		public Group getGroup() { return cGroup; }
		
		//'changeTo'
		public Keyword getChangeToKeyword_0() { return cChangeToKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//(context=[ContextModel] '.' entity=[Entity] '.' attribute=[Attribute])?
		public Group getGroup_2() { return cGroup_2; }
		
		//context=[ContextModel]
		public Assignment getContextAssignment_2_0() { return cContextAssignment_2_0; }
		
		//[ContextModel]
		public CrossReference getContextContextModelCrossReference_2_0_0() { return cContextContextModelCrossReference_2_0_0; }
		
		//ID
		public RuleCall getContextContextModelIDTerminalRuleCall_2_0_0_1() { return cContextContextModelIDTerminalRuleCall_2_0_0_1; }
		
		//'.'
		public Keyword getFullStopKeyword_2_1() { return cFullStopKeyword_2_1; }
		
		//entity=[Entity]
		public Assignment getEntityAssignment_2_2() { return cEntityAssignment_2_2; }
		
		//[Entity]
		public CrossReference getEntityEntityCrossReference_2_2_0() { return cEntityEntityCrossReference_2_2_0; }
		
		//ID
		public RuleCall getEntityEntityIDTerminalRuleCall_2_2_0_1() { return cEntityEntityIDTerminalRuleCall_2_2_0_1; }
		
		//'.'
		public Keyword getFullStopKeyword_2_3() { return cFullStopKeyword_2_3; }
		
		//attribute=[Attribute]
		public Assignment getAttributeAssignment_2_4() { return cAttributeAssignment_2_4; }
		
		//[Attribute]
		public CrossReference getAttributeAttributeCrossReference_2_4_0() { return cAttributeAttributeCrossReference_2_4_0; }
		
		//ID
		public RuleCall getAttributeAttributeIDTerminalRuleCall_2_4_0_1() { return cAttributeAttributeIDTerminalRuleCall_2_4_0_1; }
		
		//','?
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//changevalue=AttributeValue?
		public Assignment getChangevalueAssignment_4() { return cChangevalueAssignment_4; }
		
		//AttributeValue
		public RuleCall getChangevalueAttributeValueParserRuleCall_4_0() { return cChangevalueAttributeValueParserRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class ChangeToRelationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ChangeToRelation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRelationChangeToKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cContextAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final CrossReference cContextContextModelCrossReference_2_0_0 = (CrossReference)cContextAssignment_2_0.eContents().get(0);
		private final RuleCall cContextContextModelIDTerminalRuleCall_2_0_0_1 = (RuleCall)cContextContextModelCrossReference_2_0_0.eContents().get(1);
		private final Keyword cFullStopKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cRelationAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final CrossReference cRelationRelationCrossReference_2_2_0 = (CrossReference)cRelationAssignment_2_2.eContents().get(0);
		private final RuleCall cRelationRelationIDTerminalRuleCall_2_2_0_1 = (RuleCall)cRelationRelationCrossReference_2_2_0.eContents().get(1);
		private final Keyword cFullStopKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Assignment cAttributeAssignment_2_4 = (Assignment)cGroup_2.eContents().get(4);
		private final CrossReference cAttributeAttributeCrossReference_2_4_0 = (CrossReference)cAttributeAssignment_2_4.eContents().get(0);
		private final RuleCall cAttributeAttributeIDTerminalRuleCall_2_4_0_1 = (RuleCall)cAttributeAttributeCrossReference_2_4_0.eContents().get(1);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cChangevalueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cChangevalueAttributeValueParserRuleCall_4_0 = (RuleCall)cChangevalueAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ChangeToRelation:
		//	'relationChangeTo' '(' (context=[ContextModel] '.' relation=[Relation] '.' attribute=[Attribute])? ','?
		//	changevalue=AttributeValue? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'relationChangeTo' '(' (context=[ContextModel] '.' relation=[Relation] '.' attribute=[Attribute])? ','?
		//changevalue=AttributeValue? ')'
		public Group getGroup() { return cGroup; }
		
		//'relationChangeTo'
		public Keyword getRelationChangeToKeyword_0() { return cRelationChangeToKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//(context=[ContextModel] '.' relation=[Relation] '.' attribute=[Attribute])?
		public Group getGroup_2() { return cGroup_2; }
		
		//context=[ContextModel]
		public Assignment getContextAssignment_2_0() { return cContextAssignment_2_0; }
		
		//[ContextModel]
		public CrossReference getContextContextModelCrossReference_2_0_0() { return cContextContextModelCrossReference_2_0_0; }
		
		//ID
		public RuleCall getContextContextModelIDTerminalRuleCall_2_0_0_1() { return cContextContextModelIDTerminalRuleCall_2_0_0_1; }
		
		//'.'
		public Keyword getFullStopKeyword_2_1() { return cFullStopKeyword_2_1; }
		
		//relation=[Relation]
		public Assignment getRelationAssignment_2_2() { return cRelationAssignment_2_2; }
		
		//[Relation]
		public CrossReference getRelationRelationCrossReference_2_2_0() { return cRelationRelationCrossReference_2_2_0; }
		
		//ID
		public RuleCall getRelationRelationIDTerminalRuleCall_2_2_0_1() { return cRelationRelationIDTerminalRuleCall_2_2_0_1; }
		
		//'.'
		public Keyword getFullStopKeyword_2_3() { return cFullStopKeyword_2_3; }
		
		//attribute=[Attribute]
		public Assignment getAttributeAssignment_2_4() { return cAttributeAssignment_2_4; }
		
		//[Attribute]
		public CrossReference getAttributeAttributeCrossReference_2_4_0() { return cAttributeAttributeCrossReference_2_4_0; }
		
		//ID
		public RuleCall getAttributeAttributeIDTerminalRuleCall_2_4_0_1() { return cAttributeAttributeIDTerminalRuleCall_2_4_0_1; }
		
		//','?
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//changevalue=AttributeValue?
		public Assignment getChangevalueAssignment_4() { return cChangevalueAssignment_4; }
		
		//AttributeValue
		public RuleCall getChangevalueAttributeValueParserRuleCall_4_0() { return cChangevalueAttributeValueParserRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class AssertionEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.AssertionEntity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAssertEntityAttributeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cContextAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cContextContextModelCrossReference_2_0 = (CrossReference)cContextAssignment_2.eContents().get(0);
		private final RuleCall cContextContextModelIDTerminalRuleCall_2_0_1 = (RuleCall)cContextContextModelCrossReference_2_0.eContents().get(1);
		private final Keyword cFullStopKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cEntityAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cEntityEntityCrossReference_4_0 = (CrossReference)cEntityAssignment_4.eContents().get(0);
		private final RuleCall cEntityEntityIDTerminalRuleCall_4_0_1 = (RuleCall)cEntityEntityCrossReference_4_0.eContents().get(1);
		private final Keyword cFullStopKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cAttributeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cAttributeAttributeCrossReference_6_0 = (CrossReference)cAttributeAssignment_6.eContents().get(0);
		private final RuleCall cAttributeAttributeIDTerminalRuleCall_6_0_1 = (RuleCall)cAttributeAttributeCrossReference_6_0.eContents().get(1);
		private final Assignment cOperatorAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cOperatorOperatorParserRuleCall_7_0 = (RuleCall)cOperatorAssignment_7.eContents().get(0);
		private final Assignment cValueAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cValueAttributeValueParserRuleCall_8_0 = (RuleCall)cValueAssignment_8.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cSemicolonKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//AssertionEntity:
		//	'assertEntityAttribute' '[' context=[ContextModel] '.' entity=[Entity] '.' attribute=[Attribute] operator+=Operator
		//	value+=AttributeValue ']' ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'assertEntityAttribute' '[' context=[ContextModel] '.' entity=[Entity] '.' attribute=[Attribute] operator+=Operator
		//value+=AttributeValue ']' ';'
		public Group getGroup() { return cGroup; }
		
		//'assertEntityAttribute'
		public Keyword getAssertEntityAttributeKeyword_0() { return cAssertEntityAttributeKeyword_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//context=[ContextModel]
		public Assignment getContextAssignment_2() { return cContextAssignment_2; }
		
		//[ContextModel]
		public CrossReference getContextContextModelCrossReference_2_0() { return cContextContextModelCrossReference_2_0; }
		
		//ID
		public RuleCall getContextContextModelIDTerminalRuleCall_2_0_1() { return cContextContextModelIDTerminalRuleCall_2_0_1; }
		
		//'.'
		public Keyword getFullStopKeyword_3() { return cFullStopKeyword_3; }
		
		//entity=[Entity]
		public Assignment getEntityAssignment_4() { return cEntityAssignment_4; }
		
		//[Entity]
		public CrossReference getEntityEntityCrossReference_4_0() { return cEntityEntityCrossReference_4_0; }
		
		//ID
		public RuleCall getEntityEntityIDTerminalRuleCall_4_0_1() { return cEntityEntityIDTerminalRuleCall_4_0_1; }
		
		//'.'
		public Keyword getFullStopKeyword_5() { return cFullStopKeyword_5; }
		
		//attribute=[Attribute]
		public Assignment getAttributeAssignment_6() { return cAttributeAssignment_6; }
		
		//[Attribute]
		public CrossReference getAttributeAttributeCrossReference_6_0() { return cAttributeAttributeCrossReference_6_0; }
		
		//ID
		public RuleCall getAttributeAttributeIDTerminalRuleCall_6_0_1() { return cAttributeAttributeIDTerminalRuleCall_6_0_1; }
		
		//operator+=Operator
		public Assignment getOperatorAssignment_7() { return cOperatorAssignment_7; }
		
		//Operator
		public RuleCall getOperatorOperatorParserRuleCall_7_0() { return cOperatorOperatorParserRuleCall_7_0; }
		
		//value+=AttributeValue
		public Assignment getValueAssignment_8() { return cValueAssignment_8; }
		
		//AttributeValue
		public RuleCall getValueAttributeValueParserRuleCall_8_0() { return cValueAttributeValueParserRuleCall_8_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_9() { return cRightSquareBracketKeyword_9; }
		
		//';'
		public Keyword getSemicolonKeyword_10() { return cSemicolonKeyword_10; }
	}
	public class AssertionRelationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.AssertionRelation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAssertRelationAttributeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cContextAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cContextContextModelCrossReference_2_0 = (CrossReference)cContextAssignment_2.eContents().get(0);
		private final RuleCall cContextContextModelIDTerminalRuleCall_2_0_1 = (RuleCall)cContextContextModelCrossReference_2_0.eContents().get(1);
		private final Keyword cFullStopKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRelationAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cRelationRelationCrossReference_4_0 = (CrossReference)cRelationAssignment_4.eContents().get(0);
		private final RuleCall cRelationRelationIDTerminalRuleCall_4_0_1 = (RuleCall)cRelationRelationCrossReference_4_0.eContents().get(1);
		private final Keyword cFullStopKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cAttributeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cAttributeAttributeCrossReference_6_0 = (CrossReference)cAttributeAssignment_6.eContents().get(0);
		private final RuleCall cAttributeAttributeIDTerminalRuleCall_6_0_1 = (RuleCall)cAttributeAttributeCrossReference_6_0.eContents().get(1);
		private final Assignment cOperatorAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cOperatorOperatorParserRuleCall_7_0 = (RuleCall)cOperatorAssignment_7.eContents().get(0);
		private final Assignment cValueAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cValueAttributeValueParserRuleCall_8_0 = (RuleCall)cValueAssignment_8.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cSemicolonKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//AssertionRelation:
		//	'assertRelationAttribute' '[' context=[ContextModel] '.' relation=[Relation] '.' attribute=[Attribute]
		//	operator+=Operator value+=AttributeValue ']' ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'assertRelationAttribute' '[' context=[ContextModel] '.' relation=[Relation] '.' attribute=[Attribute]
		//operator+=Operator value+=AttributeValue ']' ';'
		public Group getGroup() { return cGroup; }
		
		//'assertRelationAttribute'
		public Keyword getAssertRelationAttributeKeyword_0() { return cAssertRelationAttributeKeyword_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//context=[ContextModel]
		public Assignment getContextAssignment_2() { return cContextAssignment_2; }
		
		//[ContextModel]
		public CrossReference getContextContextModelCrossReference_2_0() { return cContextContextModelCrossReference_2_0; }
		
		//ID
		public RuleCall getContextContextModelIDTerminalRuleCall_2_0_1() { return cContextContextModelIDTerminalRuleCall_2_0_1; }
		
		//'.'
		public Keyword getFullStopKeyword_3() { return cFullStopKeyword_3; }
		
		//relation=[Relation]
		public Assignment getRelationAssignment_4() { return cRelationAssignment_4; }
		
		//[Relation]
		public CrossReference getRelationRelationCrossReference_4_0() { return cRelationRelationCrossReference_4_0; }
		
		//ID
		public RuleCall getRelationRelationIDTerminalRuleCall_4_0_1() { return cRelationRelationIDTerminalRuleCall_4_0_1; }
		
		//'.'
		public Keyword getFullStopKeyword_5() { return cFullStopKeyword_5; }
		
		//attribute=[Attribute]
		public Assignment getAttributeAssignment_6() { return cAttributeAssignment_6; }
		
		//[Attribute]
		public CrossReference getAttributeAttributeCrossReference_6_0() { return cAttributeAttributeCrossReference_6_0; }
		
		//ID
		public RuleCall getAttributeAttributeIDTerminalRuleCall_6_0_1() { return cAttributeAttributeIDTerminalRuleCall_6_0_1; }
		
		//operator+=Operator
		public Assignment getOperatorAssignment_7() { return cOperatorAssignment_7; }
		
		//Operator
		public RuleCall getOperatorOperatorParserRuleCall_7_0() { return cOperatorOperatorParserRuleCall_7_0; }
		
		//value+=AttributeValue
		public Assignment getValueAssignment_8() { return cValueAssignment_8; }
		
		//AttributeValue
		public RuleCall getValueAttributeValueParserRuleCall_8_0() { return cValueAttributeValueParserRuleCall_8_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_9() { return cRightSquareBracketKeyword_9; }
		
		//';'
		public Keyword getSemicolonKeyword_10() { return cSemicolonKeyword_10; }
	}
	public class ParamsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Params");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cParamsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cParamsParameterCrossReference_0_0 = (CrossReference)cParamsAssignment_0.eContents().get(0);
		private final RuleCall cParamsParameterIDTerminalRuleCall_0_0_1 = (RuleCall)cParamsParameterCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cParamsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cParamsParameterCrossReference_1_1_0 = (CrossReference)cParamsAssignment_1_1.eContents().get(0);
		private final RuleCall cParamsParameterIDTerminalRuleCall_1_1_0_1 = (RuleCall)cParamsParameterCrossReference_1_1_0.eContents().get(1);
		
		//Params:
		//	params+=[Parameter]? (',' params+=[Parameter])*;
		@Override public ParserRule getRule() { return rule; }
		
		//params+=[Parameter]? (',' params+=[Parameter])*
		public Group getGroup() { return cGroup; }
		
		//params+=[Parameter]?
		public Assignment getParamsAssignment_0() { return cParamsAssignment_0; }
		
		//[Parameter]
		public CrossReference getParamsParameterCrossReference_0_0() { return cParamsParameterCrossReference_0_0; }
		
		//ID
		public RuleCall getParamsParameterIDTerminalRuleCall_0_0_1() { return cParamsParameterIDTerminalRuleCall_0_0_1; }
		
		//(',' params+=[Parameter])*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//params+=[Parameter]
		public Assignment getParamsAssignment_1_1() { return cParamsAssignment_1_1; }
		
		//[Parameter]
		public CrossReference getParamsParameterCrossReference_1_1_0() { return cParamsParameterCrossReference_1_1_0; }
		
		//ID
		public RuleCall getParamsParameterIDTerminalRuleCall_1_1_0_1() { return cParamsParameterIDTerminalRuleCall_1_1_0_1; }
	}
	public class ConstantParamsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ConstantParams");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cValuesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cValuesAttributeValueParserRuleCall_0_0 = (RuleCall)cValuesAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cValuesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cValuesAttributeValueParserRuleCall_1_1_0 = (RuleCall)cValuesAssignment_1_1.eContents().get(0);
		
		//ConstantParams:
		//	values+=AttributeValue? (',' values+=AttributeValue)*;
		@Override public ParserRule getRule() { return rule; }
		
		//values+=AttributeValue? (',' values+=AttributeValue)*
		public Group getGroup() { return cGroup; }
		
		//values+=AttributeValue?
		public Assignment getValuesAssignment_0() { return cValuesAssignment_0; }
		
		//AttributeValue
		public RuleCall getValuesAttributeValueParserRuleCall_0_0() { return cValuesAttributeValueParserRuleCall_0_0; }
		
		//(',' values+=AttributeValue)*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//values+=AttributeValue
		public Assignment getValuesAssignment_1_1() { return cValuesAssignment_1_1; }
		
		//AttributeValue
		public RuleCall getValuesAttributeValueParserRuleCall_1_1_0() { return cValuesAttributeValueParserRuleCall_1_1_0; }
	}
	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeTypeEnumRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueAttributeValueParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Parameter:
		//	type=Type name=ID '='? value=AttributeValue? ';';
		@Override public ParserRule getRule() { return rule; }
		
		//type=Type name=ID '='? value=AttributeValue? ';'
		public Group getGroup() { return cGroup; }
		
		//type=Type
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//Type
		public RuleCall getTypeTypeEnumRuleCall_0_0() { return cTypeTypeEnumRuleCall_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'='?
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//value=AttributeValue?
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }
		
		//AttributeValue
		public RuleCall getValueAttributeValueParserRuleCall_3_0() { return cValueAttributeValueParserRuleCall_3_0; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class ParameterConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ParameterConstraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAssertParameterKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cParamAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cParamParameterCrossReference_2_0 = (CrossReference)cParamAssignment_2.eContents().get(0);
		private final RuleCall cParamParameterIDTerminalRuleCall_2_0_1 = (RuleCall)cParamParameterCrossReference_2_0.eContents().get(1);
		private final Assignment cOperatorAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOperatorOperatorParserRuleCall_3_0 = (RuleCall)cOperatorAssignment_3.eContents().get(0);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValueAttributeValueParserRuleCall_4_0 = (RuleCall)cValueAssignment_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cInKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cObjectAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cObjectObjectCrossReference_7_0 = (CrossReference)cObjectAssignment_7.eContents().get(0);
		private final RuleCall cObjectObjectIDTerminalRuleCall_7_0_1 = (RuleCall)cObjectObjectCrossReference_7_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//ParameterConstraint:
		//	'assertParameter' '[' param=[Parameter] operator+=Operator value+=AttributeValue ']' 'in' object=[Object] ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'assertParameter' '[' param=[Parameter] operator+=Operator value+=AttributeValue ']' 'in' object=[Object] ';'
		public Group getGroup() { return cGroup; }
		
		//'assertParameter'
		public Keyword getAssertParameterKeyword_0() { return cAssertParameterKeyword_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//param=[Parameter]
		public Assignment getParamAssignment_2() { return cParamAssignment_2; }
		
		//[Parameter]
		public CrossReference getParamParameterCrossReference_2_0() { return cParamParameterCrossReference_2_0; }
		
		//ID
		public RuleCall getParamParameterIDTerminalRuleCall_2_0_1() { return cParamParameterIDTerminalRuleCall_2_0_1; }
		
		//operator+=Operator
		public Assignment getOperatorAssignment_3() { return cOperatorAssignment_3; }
		
		//Operator
		public RuleCall getOperatorOperatorParserRuleCall_3_0() { return cOperatorOperatorParserRuleCall_3_0; }
		
		//value+=AttributeValue
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }
		
		//AttributeValue
		public RuleCall getValueAttributeValueParserRuleCall_4_0() { return cValueAttributeValueParserRuleCall_4_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
		
		//'in'
		public Keyword getInKeyword_6() { return cInKeyword_6; }
		
		//object=[Object]
		public Assignment getObjectAssignment_7() { return cObjectAssignment_7; }
		
		//[Object]
		public CrossReference getObjectObjectCrossReference_7_0() { return cObjectObjectCrossReference_7_0; }
		
		//ID
		public RuleCall getObjectObjectIDTerminalRuleCall_7_0_1() { return cObjectObjectIDTerminalRuleCall_7_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_8() { return cSemicolonKeyword_8; }
	}
	public class OperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Operator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cGreaterAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cGreaterGreaterThanSignKeyword_0_0 = (Keyword)cGreaterAssignment_0.eContents().get(0);
		private final Assignment cSmallerAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cSmallerLessThanSignKeyword_1_0 = (Keyword)cSmallerAssignment_1.eContents().get(0);
		private final Assignment cGreaterequalsAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final Keyword cGreaterequalsGreaterThanSignEqualsSignKeyword_2_0 = (Keyword)cGreaterequalsAssignment_2.eContents().get(0);
		private final Assignment cSmallerequalsAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final Keyword cSmallerequalsLessThanSignEqualsSignKeyword_3_0 = (Keyword)cSmallerequalsAssignment_3.eContents().get(0);
		private final Assignment cEqualsAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final Keyword cEqualsEqualsSignEqualsSignKeyword_4_0 = (Keyword)cEqualsAssignment_4.eContents().get(0);
		private final Assignment cNotequalsAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final Keyword cNotequalsExclamationMarkEqualsSignKeyword_5_0 = (Keyword)cNotequalsAssignment_5.eContents().get(0);
		
		//Operator:
		//	greater?='>' | smaller?='<' | greaterequals?='>=' | smallerequals?='<=' | equals?='==' | notequals?='!=';
		@Override public ParserRule getRule() { return rule; }
		
		//greater?='>' | smaller?='<' | greaterequals?='>=' | smallerequals?='<=' | equals?='==' | notequals?='!='
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//greater?='>'
		public Assignment getGreaterAssignment_0() { return cGreaterAssignment_0; }
		
		//'>'
		public Keyword getGreaterGreaterThanSignKeyword_0_0() { return cGreaterGreaterThanSignKeyword_0_0; }
		
		//smaller?='<'
		public Assignment getSmallerAssignment_1() { return cSmallerAssignment_1; }
		
		//'<'
		public Keyword getSmallerLessThanSignKeyword_1_0() { return cSmallerLessThanSignKeyword_1_0; }
		
		//greaterequals?='>='
		public Assignment getGreaterequalsAssignment_2() { return cGreaterequalsAssignment_2; }
		
		//'>='
		public Keyword getGreaterequalsGreaterThanSignEqualsSignKeyword_2_0() { return cGreaterequalsGreaterThanSignEqualsSignKeyword_2_0; }
		
		//smallerequals?='<='
		public Assignment getSmallerequalsAssignment_3() { return cSmallerequalsAssignment_3; }
		
		//'<='
		public Keyword getSmallerequalsLessThanSignEqualsSignKeyword_3_0() { return cSmallerequalsLessThanSignEqualsSignKeyword_3_0; }
		
		//equals?='=='
		public Assignment getEqualsAssignment_4() { return cEqualsAssignment_4; }
		
		//'=='
		public Keyword getEqualsEqualsSignEqualsSignKeyword_4_0() { return cEqualsEqualsSignEqualsSignKeyword_4_0; }
		
		//notequals?='!='
		public Assignment getNotequalsAssignment_5() { return cNotequalsAssignment_5; }
		
		//'!='
		public Keyword getNotequalsExclamationMarkEqualsSignKeyword_5_0() { return cNotequalsExclamationMarkEqualsSignKeyword_5_0; }
	}
	public class ClockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Clock");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cClockKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Clock:
		//	'clock' name=ID ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'clock' name=ID ';'
		public Group getGroup() { return cGroup; }
		
		//'clock'
		public Keyword getClockKeyword_0() { return cClockKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class ObjectTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ObjectType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cObjectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//ObjectType:
		//	'object' name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//'object' name=ID
		public Group getGroup() { return cGroup; }
		
		//'object'
		public Keyword getObjectKeyword_0() { return cObjectKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}
	public class ObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Object");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cObjectAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cObjectObjectTypeParserRuleCall_0_0 = (RuleCall)cObjectAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Object:
		//	object+=ObjectType name=ID ';';
		@Override public ParserRule getRule() { return rule; }
		
		//object+=ObjectType name=ID ';'
		public Group getGroup() { return cGroup; }
		
		//object+=ObjectType
		public Assignment getObjectAssignment_0() { return cObjectAssignment_0; }
		
		//ObjectType
		public RuleCall getObjectObjectTypeParserRuleCall_0_0() { return cObjectObjectTypeParserRuleCall_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class ConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Constraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConstraintKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cMessagesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMessagesMessageParserRuleCall_3_0 = (RuleCall)cMessagesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Constraint:
		//	'constraint' name=ID '{'
		//	messages+=Message*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'constraint' name=ID '{' messages+=Message* '}'
		public Group getGroup() { return cGroup; }
		
		//'constraint'
		public Keyword getConstraintKeyword_0() { return cConstraintKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//messages+=Message*
		public Assignment getMessagesAssignment_3() { return cMessagesAssignment_3; }
		
		//Message
		public RuleCall getMessagesMessageParserRuleCall_3_0() { return cMessagesMessageParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class AltElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Alt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAltKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cExpressionsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cExpressionsExpressionParserRuleCall_1_0 = (RuleCall)cExpressionsAssignment_1.eContents().get(0);
		
		//Alt:
		//	'alt' expressions+=Expression*;
		@Override public ParserRule getRule() { return rule; }
		
		//'alt' expressions+=Expression*
		public Group getGroup() { return cGroup; }
		
		//'alt'
		public Keyword getAltKeyword_0() { return cAltKeyword_0; }
		
		//expressions+=Expression*
		public Assignment getExpressionsAssignment_1() { return cExpressionsAssignment_1; }
		
		//Expression
		public RuleCall getExpressionsExpressionParserRuleCall_1_0() { return cExpressionsExpressionParserRuleCall_1_0; }
	}
	public class ExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Expression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cAltConditionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAltConditionLogicalExpressionParserRuleCall_1_0 = (RuleCall)cAltConditionAssignment_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMessagesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMessagesMessageParserRuleCall_4_0 = (RuleCall)cMessagesAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Expression:
		//	'(' altCondition=LogicalExpression ')' '{'
		//	messages+=Message*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'(' altCondition=LogicalExpression ')' '{' messages+=Message* '}'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//altCondition=LogicalExpression
		public Assignment getAltConditionAssignment_1() { return cAltConditionAssignment_1; }
		
		//LogicalExpression
		public RuleCall getAltConditionLogicalExpressionParserRuleCall_1_0() { return cAltConditionLogicalExpressionParserRuleCall_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//messages+=Message*
		public Assignment getMessagesAssignment_4() { return cMessagesAssignment_4; }
		
		//Message
		public RuleCall getMessagesMessageParserRuleCall_4_0() { return cMessagesMessageParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class LogicalExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.LogicalExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cUnaryLogicalExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBinaryLogicalExpressionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//LogicalExpression:
		//	UnaryLogicalExpression | BinaryLogicalExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//UnaryLogicalExpression | BinaryLogicalExpression
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//UnaryLogicalExpression
		public RuleCall getUnaryLogicalExpressionParserRuleCall_0() { return cUnaryLogicalExpressionParserRuleCall_0; }
		
		//BinaryLogicalExpression
		public RuleCall getBinaryLogicalExpressionParserRuleCall_1() { return cBinaryLogicalExpressionParserRuleCall_1; }
	}
	public class BinaryLogicalExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.BinaryLogicalExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEqualsExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEqualsBooleanExpressionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cGreaterThanExpressionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cLesserThanExpressionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cAndExpressionParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cOrExpressionParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//BinaryLogicalExpression:
		//	EqualsExpression | EqualsBooleanExpression | GreaterThanExpression | LesserThanExpression | AndExpression |
		//	OrExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//EqualsExpression | EqualsBooleanExpression | GreaterThanExpression | LesserThanExpression | AndExpression | OrExpression
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EqualsExpression
		public RuleCall getEqualsExpressionParserRuleCall_0() { return cEqualsExpressionParserRuleCall_0; }
		
		//EqualsBooleanExpression
		public RuleCall getEqualsBooleanExpressionParserRuleCall_1() { return cEqualsBooleanExpressionParserRuleCall_1; }
		
		//GreaterThanExpression
		public RuleCall getGreaterThanExpressionParserRuleCall_2() { return cGreaterThanExpressionParserRuleCall_2; }
		
		//LesserThanExpression
		public RuleCall getLesserThanExpressionParserRuleCall_3() { return cLesserThanExpressionParserRuleCall_3; }
		
		//AndExpression
		public RuleCall getAndExpressionParserRuleCall_4() { return cAndExpressionParserRuleCall_4; }
		
		//OrExpression
		public RuleCall getOrExpressionParserRuleCall_5() { return cOrExpressionParserRuleCall_5; }
	}
	public class AndExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.AndExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAndKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLhsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLhsLogicalExpressionParserRuleCall_2_0 = (RuleCall)cLhsAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRhsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRhsLogicalExpressionParserRuleCall_4_0 = (RuleCall)cRhsAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//AndExpression:
		//	'and' '(' lhs=LogicalExpression ',' rhs=LogicalExpression ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'and' '(' lhs=LogicalExpression ',' rhs=LogicalExpression ')'
		public Group getGroup() { return cGroup; }
		
		//'and'
		public Keyword getAndKeyword_0() { return cAndKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//lhs=LogicalExpression
		public Assignment getLhsAssignment_2() { return cLhsAssignment_2; }
		
		//LogicalExpression
		public RuleCall getLhsLogicalExpressionParserRuleCall_2_0() { return cLhsLogicalExpressionParserRuleCall_2_0; }
		
		//','
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//rhs=LogicalExpression
		public Assignment getRhsAssignment_4() { return cRhsAssignment_4; }
		
		//LogicalExpression
		public RuleCall getRhsLogicalExpressionParserRuleCall_4_0() { return cRhsLogicalExpressionParserRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class OrExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.OrExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOrKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLhsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLhsLogicalExpressionParserRuleCall_2_0 = (RuleCall)cLhsAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRhsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRhsLogicalExpressionParserRuleCall_4_0 = (RuleCall)cRhsAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//OrExpression:
		//	'or' '(' lhs=LogicalExpression ',' rhs=LogicalExpression ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'or' '(' lhs=LogicalExpression ',' rhs=LogicalExpression ')'
		public Group getGroup() { return cGroup; }
		
		//'or'
		public Keyword getOrKeyword_0() { return cOrKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//lhs=LogicalExpression
		public Assignment getLhsAssignment_2() { return cLhsAssignment_2; }
		
		//LogicalExpression
		public RuleCall getLhsLogicalExpressionParserRuleCall_2_0() { return cLhsLogicalExpressionParserRuleCall_2_0; }
		
		//','
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//rhs=LogicalExpression
		public Assignment getRhsAssignment_4() { return cRhsAssignment_4; }
		
		//LogicalExpression
		public RuleCall getRhsLogicalExpressionParserRuleCall_4_0() { return cRhsLogicalExpressionParserRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class EqualsExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EqualsExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEqualsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLhsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cLhsParameterCrossReference_2_0 = (CrossReference)cLhsAssignment_2.eContents().get(0);
		private final RuleCall cLhsParameterIDTerminalRuleCall_2_0_1 = (RuleCall)cLhsParameterCrossReference_2_0.eContents().get(1);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRhsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRhsNUMBERTerminalRuleCall_4_0 = (RuleCall)cRhsAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//EqualsExpression:
		//	'equals' '(' lhs=[Parameter] ',' rhs=NUMBER ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'equals' '(' lhs=[Parameter] ',' rhs=NUMBER ')'
		public Group getGroup() { return cGroup; }
		
		//'equals'
		public Keyword getEqualsKeyword_0() { return cEqualsKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//lhs=[Parameter]
		public Assignment getLhsAssignment_2() { return cLhsAssignment_2; }
		
		//[Parameter]
		public CrossReference getLhsParameterCrossReference_2_0() { return cLhsParameterCrossReference_2_0; }
		
		//ID
		public RuleCall getLhsParameterIDTerminalRuleCall_2_0_1() { return cLhsParameterIDTerminalRuleCall_2_0_1; }
		
		//','
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//rhs=NUMBER
		public Assignment getRhsAssignment_4() { return cRhsAssignment_4; }
		
		//NUMBER
		public RuleCall getRhsNUMBERTerminalRuleCall_4_0() { return cRhsNUMBERTerminalRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class EqualsBooleanExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EqualsBooleanExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cEqualsKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cLhsAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final CrossReference cLhsParameterCrossReference_0_2_0 = (CrossReference)cLhsAssignment_0_2.eContents().get(0);
		private final RuleCall cLhsParameterIDTerminalRuleCall_0_2_0_1 = (RuleCall)cLhsParameterCrossReference_0_2_0.eContents().get(1);
		private final Keyword cCommaKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Assignment cRhsAssignment_0_4 = (Assignment)cGroup_0.eContents().get(4);
		private final Keyword cRhsTrueKeyword_0_4_0 = (Keyword)cRhsAssignment_0_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_0_5 = (Keyword)cGroup_0.eContents().get(5);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cEqualsKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cLhsAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final CrossReference cLhsParameterCrossReference_1_2_0 = (CrossReference)cLhsAssignment_1_2.eContents().get(0);
		private final RuleCall cLhsParameterIDTerminalRuleCall_1_2_0_1 = (RuleCall)cLhsParameterCrossReference_1_2_0.eContents().get(1);
		private final Keyword cCommaKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cRhsAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final Keyword cRhsFalseKeyword_1_4_0 = (Keyword)cRhsAssignment_1_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		
		//EqualsBooleanExpression:
		//	'equals' '(' lhs=[Parameter] ',' rhs='true' ')' | 'equals' '(' lhs=[Parameter] ',' rhs='false' ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'equals' '(' lhs=[Parameter] ',' rhs='true' ')' | 'equals' '(' lhs=[Parameter] ',' rhs='false' ')'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'equals' '(' lhs=[Parameter] ',' rhs='true' ')'
		public Group getGroup_0() { return cGroup_0; }
		
		//'equals'
		public Keyword getEqualsKeyword_0_0() { return cEqualsKeyword_0_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0_1() { return cLeftParenthesisKeyword_0_1; }
		
		//lhs=[Parameter]
		public Assignment getLhsAssignment_0_2() { return cLhsAssignment_0_2; }
		
		//[Parameter]
		public CrossReference getLhsParameterCrossReference_0_2_0() { return cLhsParameterCrossReference_0_2_0; }
		
		//ID
		public RuleCall getLhsParameterIDTerminalRuleCall_0_2_0_1() { return cLhsParameterIDTerminalRuleCall_0_2_0_1; }
		
		//','
		public Keyword getCommaKeyword_0_3() { return cCommaKeyword_0_3; }
		
		//rhs='true'
		public Assignment getRhsAssignment_0_4() { return cRhsAssignment_0_4; }
		
		//'true'
		public Keyword getRhsTrueKeyword_0_4_0() { return cRhsTrueKeyword_0_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_0_5() { return cRightParenthesisKeyword_0_5; }
		
		//'equals' '(' lhs=[Parameter] ',' rhs='false' ')'
		public Group getGroup_1() { return cGroup_1; }
		
		//'equals'
		public Keyword getEqualsKeyword_1_0() { return cEqualsKeyword_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1_1() { return cLeftParenthesisKeyword_1_1; }
		
		//lhs=[Parameter]
		public Assignment getLhsAssignment_1_2() { return cLhsAssignment_1_2; }
		
		//[Parameter]
		public CrossReference getLhsParameterCrossReference_1_2_0() { return cLhsParameterCrossReference_1_2_0; }
		
		//ID
		public RuleCall getLhsParameterIDTerminalRuleCall_1_2_0_1() { return cLhsParameterIDTerminalRuleCall_1_2_0_1; }
		
		//','
		public Keyword getCommaKeyword_1_3() { return cCommaKeyword_1_3; }
		
		//rhs='false'
		public Assignment getRhsAssignment_1_4() { return cRhsAssignment_1_4; }
		
		//'false'
		public Keyword getRhsFalseKeyword_1_4_0() { return cRhsFalseKeyword_1_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_1_5() { return cRightParenthesisKeyword_1_5; }
	}
	public class GreaterThanExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.GreaterThanExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGreaterKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLhsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cLhsParameterCrossReference_2_0 = (CrossReference)cLhsAssignment_2.eContents().get(0);
		private final RuleCall cLhsParameterIDTerminalRuleCall_2_0_1 = (RuleCall)cLhsParameterCrossReference_2_0.eContents().get(1);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRhsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRhsNUMBERTerminalRuleCall_4_0 = (RuleCall)cRhsAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//GreaterThanExpression:
		//	'greater' '(' lhs=[Parameter] ',' rhs=NUMBER ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'greater' '(' lhs=[Parameter] ',' rhs=NUMBER ')'
		public Group getGroup() { return cGroup; }
		
		//'greater'
		public Keyword getGreaterKeyword_0() { return cGreaterKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//lhs=[Parameter]
		public Assignment getLhsAssignment_2() { return cLhsAssignment_2; }
		
		//[Parameter]
		public CrossReference getLhsParameterCrossReference_2_0() { return cLhsParameterCrossReference_2_0; }
		
		//ID
		public RuleCall getLhsParameterIDTerminalRuleCall_2_0_1() { return cLhsParameterIDTerminalRuleCall_2_0_1; }
		
		//','
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//rhs=NUMBER
		public Assignment getRhsAssignment_4() { return cRhsAssignment_4; }
		
		//NUMBER
		public RuleCall getRhsNUMBERTerminalRuleCall_4_0() { return cRhsNUMBERTerminalRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class LesserThanExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.LesserThanExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLesserKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLhsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cLhsParameterCrossReference_2_0 = (CrossReference)cLhsAssignment_2.eContents().get(0);
		private final RuleCall cLhsParameterIDTerminalRuleCall_2_0_1 = (RuleCall)cLhsParameterCrossReference_2_0.eContents().get(1);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRhsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRhsNUMBERTerminalRuleCall_4_0 = (RuleCall)cRhsAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//LesserThanExpression:
		//	'lesser' '(' lhs=[Parameter] ',' rhs=NUMBER ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'lesser' '(' lhs=[Parameter] ',' rhs=NUMBER ')'
		public Group getGroup() { return cGroup; }
		
		//'lesser'
		public Keyword getLesserKeyword_0() { return cLesserKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//lhs=[Parameter]
		public Assignment getLhsAssignment_2() { return cLhsAssignment_2; }
		
		//[Parameter]
		public CrossReference getLhsParameterCrossReference_2_0() { return cLhsParameterCrossReference_2_0; }
		
		//ID
		public RuleCall getLhsParameterIDTerminalRuleCall_2_0_1() { return cLhsParameterIDTerminalRuleCall_2_0_1; }
		
		//','
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//rhs=NUMBER
		public Assignment getRhsAssignment_4() { return cRhsAssignment_4; }
		
		//NUMBER
		public RuleCall getRhsNUMBERTerminalRuleCall_4_0() { return cRhsNUMBERTerminalRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class UnaryLogicalExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.UnaryLogicalExpression");
		private final RuleCall cNotLogicalExpressionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//UnaryLogicalExpression:
		//	NotLogicalExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//NotLogicalExpression
		public RuleCall getNotLogicalExpressionParserRuleCall() { return cNotLogicalExpressionParserRuleCall; }
	}
	public class NotLogicalExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.NotLogicalExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNotKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOperandAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOperandLogicalExpressionParserRuleCall_2_0 = (RuleCall)cOperandAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//NotLogicalExpression:
		//	'not' '(' operand=LogicalExpression ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'not' '(' operand=LogicalExpression ')'
		public Group getGroup() { return cGroup; }
		
		//'not'
		public Keyword getNotKeyword_0() { return cNotKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//operand=LogicalExpression
		public Assignment getOperandAssignment_2() { return cOperandAssignment_2; }
		
		//LogicalExpression
		public RuleCall getOperandLogicalExpressionParserRuleCall_2_0() { return cOperandLogicalExpressionParserRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class ParElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Par");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cParKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cParexpressionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cParexpressionParExpressionParserRuleCall_2_0 = (RuleCall)cParexpressionAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Par:
		//	'par' '{' parexpression+=ParExpression* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'par' '{' parexpression+=ParExpression* '}'
		public Group getGroup() { return cGroup; }
		
		//'par'
		public Keyword getParKeyword_0() { return cParKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//parexpression+=ParExpression*
		public Assignment getParexpressionAssignment_2() { return cParexpressionAssignment_2; }
		
		//ParExpression
		public RuleCall getParexpressionParExpressionParserRuleCall_2_0() { return cParexpressionParExpressionParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class ParExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ParExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCaseKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cMessagesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMessagesMessageParserRuleCall_3_0 = (RuleCall)cMessagesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ParExpression:
		//	'case' name=ID '{' messages+=Message* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'case' name=ID '{' messages+=Message* '}'
		public Group getGroup() { return cGroup; }
		
		//'case'
		public Keyword getCaseKeyword_0() { return cCaseKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//messages+=Message*
		public Assignment getMessagesAssignment_3() { return cMessagesAssignment_3; }
		
		//Message
		public RuleCall getMessagesMessageParserRuleCall_3_0() { return cMessagesMessageParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class LoopElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Loop");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLoopKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMinAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMinINTTerminalRuleCall_2_0 = (RuleCall)cMinAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMaxAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMaxINTTerminalRuleCall_4_0 = (RuleCall)cMaxAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cMessagesAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cMessagesMessageParserRuleCall_7_0 = (RuleCall)cMessagesAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Loop:
		//	'loop' '(' min=INT ',' max=INT ')' '{'
		//	messages+=Message*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'loop' '(' min=INT ',' max=INT ')' '{' messages+=Message* '}'
		public Group getGroup() { return cGroup; }
		
		//'loop'
		public Keyword getLoopKeyword_0() { return cLoopKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//min=INT
		public Assignment getMinAssignment_2() { return cMinAssignment_2; }
		
		//INT
		public RuleCall getMinINTTerminalRuleCall_2_0() { return cMinINTTerminalRuleCall_2_0; }
		
		//','
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//max=INT
		public Assignment getMaxAssignment_4() { return cMaxAssignment_4; }
		
		//INT
		public RuleCall getMaxINTTerminalRuleCall_4_0() { return cMaxINTTerminalRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//messages+=Message*
		public Assignment getMessagesAssignment_7() { return cMessagesAssignment_7; }
		
		//Message
		public RuleCall getMessagesMessageParserRuleCall_7_0() { return cMessagesMessageParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	
	public class TypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cIntegerEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cIntegerIntegerKeyword_0_0 = (Keyword)cIntegerEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cFloatEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cFloatFloatKeyword_1_0 = (Keyword)cFloatEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cBoolEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cBoolBoolKeyword_2_0 = (Keyword)cBoolEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cStringEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cStringStringKeyword_3_0 = (Keyword)cStringEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum Type:
		//	integer | float | bool | string;
		public EnumRule getRule() { return rule; }
		
		//integer | float | bool | string
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//integer
		public EnumLiteralDeclaration getIntegerEnumLiteralDeclaration_0() { return cIntegerEnumLiteralDeclaration_0; }
		
		//"integer"
		public Keyword getIntegerIntegerKeyword_0_0() { return cIntegerIntegerKeyword_0_0; }
		
		//float
		public EnumLiteralDeclaration getFloatEnumLiteralDeclaration_1() { return cFloatEnumLiteralDeclaration_1; }
		
		//"float"
		public Keyword getFloatFloatKeyword_1_0() { return cFloatFloatKeyword_1_0; }
		
		//bool
		public EnumLiteralDeclaration getBoolEnumLiteralDeclaration_2() { return cBoolEnumLiteralDeclaration_2; }
		
		//"bool"
		public Keyword getBoolBoolKeyword_2_0() { return cBoolBoolKeyword_2_0; }
		
		//string
		public EnumLiteralDeclaration getStringEnumLiteralDeclaration_3() { return cStringEnumLiteralDeclaration_3; }
		
		//"string"
		public Keyword getStringStringKeyword_3_0() { return cStringStringKeyword_3_0; }
	}
	
	private final DomainElements pDomain;
	private final IncludeElements pInclude;
	private final ContextModelElements pContextModel;
	private final ContextFragmentElements pContextFragment;
	private final AttributeElements pAttribute;
	private final AttributeValueElements pAttributeValue;
	private final FragmentAttributeElements pFragmentAttribute;
	private final EntityElements pEntity;
	private final FEntityElements pFEntity;
	private final RelationElements pRelation;
	private final FRelationElements pFRelation;
	private final ScenarioElements pScenario;
	private final ScenarioContentElements pScenarioContent;
	private final MessageElements pMessage;
	private final ResetClockElements pResetClock;
	private final ClockConstraintElements pClockConstraint;
	private final ClockConstraintExpressionElements pClockConstraintExpression;
	private final ContextMessageElements pContextMessage;
	private final ContextMessageContentElements pContextMessageContent;
	private final MatchMessageElements pMatchMessage;
	private final ChangeMessageElements pChangeMessage;
	private final AppearMessageElements pAppearMessage;
	private final DisappearMessageElements pDisappearMessage;
	private final ChangeToMessageElements pChangeToMessage;
	private final ChangeToRelationElements pChangeToRelation;
	private final AssertionEntityElements pAssertionEntity;
	private final AssertionRelationElements pAssertionRelation;
	private final ParamsElements pParams;
	private final ConstantParamsElements pConstantParams;
	private final ParameterElements pParameter;
	private final ParameterConstraintElements pParameterConstraint;
	private final OperatorElements pOperator;
	private final ClockElements pClock;
	private final TypeElements eType;
	private final TerminalRule tNUMBER;
	private final TerminalRule tREAL;
	private final ObjectTypeElements pObjectType;
	private final ObjectElements pObject;
	private final ConstraintElements pConstraint;
	private final AltElements pAlt;
	private final ExpressionElements pExpression;
	private final LogicalExpressionElements pLogicalExpression;
	private final BinaryLogicalExpressionElements pBinaryLogicalExpression;
	private final AndExpressionElements pAndExpression;
	private final OrExpressionElements pOrExpression;
	private final EqualsExpressionElements pEqualsExpression;
	private final EqualsBooleanExpressionElements pEqualsBooleanExpression;
	private final GreaterThanExpressionElements pGreaterThanExpression;
	private final LesserThanExpressionElements pLesserThanExpression;
	private final UnaryLogicalExpressionElements pUnaryLogicalExpression;
	private final NotLogicalExpressionElements pNotLogicalExpression;
	private final ParElements pPar;
	private final ParExpressionElements pParExpression;
	private final LoopElements pLoop;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pDomain = new DomainElements();
		this.pInclude = new IncludeElements();
		this.pContextModel = new ContextModelElements();
		this.pContextFragment = new ContextFragmentElements();
		this.pAttribute = new AttributeElements();
		this.pAttributeValue = new AttributeValueElements();
		this.pFragmentAttribute = new FragmentAttributeElements();
		this.pEntity = new EntityElements();
		this.pFEntity = new FEntityElements();
		this.pRelation = new RelationElements();
		this.pFRelation = new FRelationElements();
		this.pScenario = new ScenarioElements();
		this.pScenarioContent = new ScenarioContentElements();
		this.pMessage = new MessageElements();
		this.pResetClock = new ResetClockElements();
		this.pClockConstraint = new ClockConstraintElements();
		this.pClockConstraintExpression = new ClockConstraintExpressionElements();
		this.pContextMessage = new ContextMessageElements();
		this.pContextMessageContent = new ContextMessageContentElements();
		this.pMatchMessage = new MatchMessageElements();
		this.pChangeMessage = new ChangeMessageElements();
		this.pAppearMessage = new AppearMessageElements();
		this.pDisappearMessage = new DisappearMessageElements();
		this.pChangeToMessage = new ChangeToMessageElements();
		this.pChangeToRelation = new ChangeToRelationElements();
		this.pAssertionEntity = new AssertionEntityElements();
		this.pAssertionRelation = new AssertionRelationElements();
		this.pParams = new ParamsElements();
		this.pConstantParams = new ConstantParamsElements();
		this.pParameter = new ParameterElements();
		this.pParameterConstraint = new ParameterConstraintElements();
		this.pOperator = new OperatorElements();
		this.pClock = new ClockElements();
		this.eType = new TypeElements();
		this.tNUMBER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.NUMBER");
		this.tREAL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.REAL");
		this.pObjectType = new ObjectTypeElements();
		this.pObject = new ObjectElements();
		this.pConstraint = new ConstraintElements();
		this.pAlt = new AltElements();
		this.pExpression = new ExpressionElements();
		this.pLogicalExpression = new LogicalExpressionElements();
		this.pBinaryLogicalExpression = new BinaryLogicalExpressionElements();
		this.pAndExpression = new AndExpressionElements();
		this.pOrExpression = new OrExpressionElements();
		this.pEqualsExpression = new EqualsExpressionElements();
		this.pEqualsBooleanExpression = new EqualsBooleanExpressionElements();
		this.pGreaterThanExpression = new GreaterThanExpressionElements();
		this.pLesserThanExpression = new LesserThanExpressionElements();
		this.pUnaryLogicalExpression = new UnaryLogicalExpressionElements();
		this.pNotLogicalExpression = new NotLogicalExpressionElements();
		this.pPar = new ParElements();
		this.pParExpression = new ParExpressionElements();
		this.pLoop = new LoopElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Domain:
	//	specification='specification'? name=ID? '{'?
	//	includes+=Include*
	//	contextmodels+=ContextModel*
	//	contextfragments+=ContextFragment*
	//	objects+=Object*
	//	parameters+=Parameter*
	//	clocks+=Clock*
	//	constraints+=Constraint*
	//	scenarios+=Scenario* '}'?;
	public DomainElements getDomainAccess() {
		return pDomain;
	}
	
	public ParserRule getDomainRule() {
		return getDomainAccess().getRule();
	}
	
	//Include:
	//	'import' context=[ContextModel] 'from' importURI=STRING;
	public IncludeElements getIncludeAccess() {
		return pInclude;
	}
	
	public ParserRule getIncludeRule() {
		return getIncludeAccess().getRule();
	}
	
	//ContextModel:
	//	'contextmodel' name=ID '{'
	//	entities+=Entity*
	//	relations+=Relation*
	//	'}';
	public ContextModelElements getContextModelAccess() {
		return pContextModel;
	}
	
	public ParserRule getContextModelRule() {
		return getContextModelAccess().getRule();
	}
	
	//ContextFragment:
	//	'contextfragment' name=ID '{'
	//	entities+=FEntity*
	//	relations+=FRelation*
	//	'}';
	public ContextFragmentElements getContextFragmentAccess() {
		return pContextFragment;
	}
	
	public ParserRule getContextFragmentRule() {
		return getContextFragmentAccess().getRule();
	}
	
	//Attribute:
	//	'attribute' int?='int'? float?='float'? string?='string'? boolean?='boolean'? name=ID '='? value=AttributeValue? ';';
	public AttributeElements getAttributeAccess() {
		return pAttribute;
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}
	
	//AttributeValue:
	//	value=STRING | value=REAL | value=NUMBER | value='true' | value='false';
	public AttributeValueElements getAttributeValueAccess() {
		return pAttributeValue;
	}
	
	public ParserRule getAttributeValueRule() {
		return getAttributeValueAccess().getRule();
	}
	
	//FragmentAttribute:
	//	'attributeconstraint' int?='int'? float?='float'? string?='string'? boolean?='boolean'? name=ID greater?='>'?
	//	smaller?='<'? greaterequals?='>='? smallerequals?='<='? equals?='=='? notequals?='!='? value=AttributeValue ';';
	public FragmentAttributeElements getFragmentAttributeAccess() {
		return pFragmentAttribute;
	}
	
	public ParserRule getFragmentAttributeRule() {
		return getFragmentAttributeAccess().getRule();
	}
	
	//Entity:
	//	'entity' name=ID '{'
	//	attributes+=Attribute*
	//	'}';
	public EntityElements getEntityAccess() {
		return pEntity;
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}
	
	//FEntity:
	//	'entityconstraint' name=ID '{'
	//	attributes+=FragmentAttribute*
	//	'}';
	public FEntityElements getFEntityAccess() {
		return pFEntity;
	}
	
	public ParserRule getFEntityRule() {
		return getFEntityAccess().getRule();
	}
	
	//Relation:
	//	'relation' name=ID '(' sender=[Entity] ',' receiver=[Entity] ')' '{'
	//	attributes+=Attribute*
	//	'}';
	public RelationElements getRelationAccess() {
		return pRelation;
	}
	
	public ParserRule getRelationRule() {
		return getRelationAccess().getRule();
	}
	
	//FRelation:
	//	'relationconstraint' name=ID '(' sender=[FEntity] ',' receiver=[FEntity] ')' '{'
	//	attributes+=FragmentAttribute*
	//	'}';
	public FRelationElements getFRelationAccess() {
		return pFRelation;
	}
	
	public ParserRule getFRelationRule() {
		return getFRelationAccess().getRule();
	}
	
	//Scenario:
	//	'scenario' name=ID '{'
	//	scenariocontents+=ScenarioContent*
	//	'}';
	public ScenarioElements getScenarioAccess() {
		return pScenario;
	}
	
	public ParserRule getScenarioRule() {
		return getScenarioAccess().getRule();
	}
	
	//ScenarioContent:
	//	alt+=Alt | message+=Message | par+=Par | loop+=Loop | contextmessage+=ContextMessage |
	//	paramConstraint+=ParameterConstraint
	//	| assertentity+=AssertionEntity | assertrelation+=AssertionRelation;
	public ScenarioContentElements getScenarioContentAccess() {
		return pScenarioContent;
	}
	
	public ParserRule getScenarioContentRule() {
		return getScenarioContentAccess().getRule();
	}
	
	//Message:
	//	'message' name=ID '(' (params+=Params | constantparams+=ConstantParams) ')' required?='required'? fail?='fail'?
	//	strict?='strict'?
	//	sender=[Object] '->' receiver=[Object] past?='pastConstraint'? future?='futureConstraint'?
	//	'{'? c=[Constraint]? ','? constraintexp=ClockConstraintExpression? ','? resetinconstraint=ResetClock? '}'?
	//	clockconstraint?='clockConstraint'?
	//	'{'? cConstraint=ClockConstraintExpression? '}'?
	//	resetclock=ResetClock? ';';
	public MessageElements getMessageAccess() {
		return pMessage;
	}
	
	public ParserRule getMessageRule() {
		return getMessageAccess().getRule();
	}
	
	//ResetClock:
	//	'reset' clock=[Clock];
	public ResetClockElements getResetClockAccess() {
		return pResetClock;
	}
	
	public ParserRule getResetClockRule() {
		return getResetClockAccess().getRule();
	}
	
	//ClockConstraint:
	//	clock=[Clock] op=Operator constant=NUMBER;
	public ClockConstraintElements getClockConstraintAccess() {
		return pClockConstraint;
	}
	
	public ParserRule getClockConstraintRule() {
		return getClockConstraintAccess().getRule();
	}
	
	//ClockConstraintExpression:
	//	not?='not'? '('? lclockconstraint=ClockConstraint ')'?
	//	| lclockconstraint=ClockConstraint 'and' rclockconstraint=ClockConstraint;
	public ClockConstraintExpressionElements getClockConstraintExpressionAccess() {
		return pClockConstraintExpression;
	}
	
	public ParserRule getClockConstraintExpressionRule() {
		return getClockConstraintExpressionAccess().getRule();
	}
	
	//ContextMessage:
	//	content+=ContextMessageContent
	//	required?='required'? fail?='fail'? strict?='strict'?
	//	';';
	public ContextMessageElements getContextMessageAccess() {
		return pContextMessage;
	}
	
	public ParserRule getContextMessageRule() {
		return getContextMessageAccess().getRule();
	}
	
	//ContextMessageContent:
	//	match+=MatchMessage | change+=ChangeMessage;
	public ContextMessageContentElements getContextMessageContentAccess() {
		return pContextMessageContent;
	}
	
	public ParserRule getContextMessageContentRule() {
		return getContextMessageContentAccess().getRule();
	}
	
	//MatchMessage:
	//	'match' '(' context=[ContextModel]? ','? content=[ContextFragment]? ')';
	public MatchMessageElements getMatchMessageAccess() {
		return pMatchMessage;
	}
	
	public ParserRule getMatchMessageRule() {
		return getMatchMessageAccess().getRule();
	}
	
	//ChangeMessage:
	//	disappear+=DisappearMessage | appear+=AppearMessage | changeto+=ChangeToMessage | changetor+=ChangeToRelation;
	public ChangeMessageElements getChangeMessageAccess() {
		return pChangeMessage;
	}
	
	public ParserRule getChangeMessageRule() {
		return getChangeMessageAccess().getRule();
	}
	
	//AppearMessage:
	//	'appear' '(' (context=[ContextModel] '.' entity=[Entity])? ')';
	public AppearMessageElements getAppearMessageAccess() {
		return pAppearMessage;
	}
	
	public ParserRule getAppearMessageRule() {
		return getAppearMessageAccess().getRule();
	}
	
	//DisappearMessage:
	//	'disappear' '(' (context=[ContextModel] '.' entity=[Entity])? ')';
	public DisappearMessageElements getDisappearMessageAccess() {
		return pDisappearMessage;
	}
	
	public ParserRule getDisappearMessageRule() {
		return getDisappearMessageAccess().getRule();
	}
	
	//ChangeToMessage:
	//	'changeTo' '(' (context=[ContextModel] '.' entity=[Entity] '.' attribute=[Attribute])? ','?
	//	changevalue=AttributeValue? ')';
	public ChangeToMessageElements getChangeToMessageAccess() {
		return pChangeToMessage;
	}
	
	public ParserRule getChangeToMessageRule() {
		return getChangeToMessageAccess().getRule();
	}
	
	//ChangeToRelation:
	//	'relationChangeTo' '(' (context=[ContextModel] '.' relation=[Relation] '.' attribute=[Attribute])? ','?
	//	changevalue=AttributeValue? ')';
	public ChangeToRelationElements getChangeToRelationAccess() {
		return pChangeToRelation;
	}
	
	public ParserRule getChangeToRelationRule() {
		return getChangeToRelationAccess().getRule();
	}
	
	//AssertionEntity:
	//	'assertEntityAttribute' '[' context=[ContextModel] '.' entity=[Entity] '.' attribute=[Attribute] operator+=Operator
	//	value+=AttributeValue ']' ';';
	public AssertionEntityElements getAssertionEntityAccess() {
		return pAssertionEntity;
	}
	
	public ParserRule getAssertionEntityRule() {
		return getAssertionEntityAccess().getRule();
	}
	
	//AssertionRelation:
	//	'assertRelationAttribute' '[' context=[ContextModel] '.' relation=[Relation] '.' attribute=[Attribute]
	//	operator+=Operator value+=AttributeValue ']' ';';
	public AssertionRelationElements getAssertionRelationAccess() {
		return pAssertionRelation;
	}
	
	public ParserRule getAssertionRelationRule() {
		return getAssertionRelationAccess().getRule();
	}
	
	//Params:
	//	params+=[Parameter]? (',' params+=[Parameter])*;
	public ParamsElements getParamsAccess() {
		return pParams;
	}
	
	public ParserRule getParamsRule() {
		return getParamsAccess().getRule();
	}
	
	//ConstantParams:
	//	values+=AttributeValue? (',' values+=AttributeValue)*;
	public ConstantParamsElements getConstantParamsAccess() {
		return pConstantParams;
	}
	
	public ParserRule getConstantParamsRule() {
		return getConstantParamsAccess().getRule();
	}
	
	//Parameter:
	//	type=Type name=ID '='? value=AttributeValue? ';';
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	//ParameterConstraint:
	//	'assertParameter' '[' param=[Parameter] operator+=Operator value+=AttributeValue ']' 'in' object=[Object] ';';
	public ParameterConstraintElements getParameterConstraintAccess() {
		return pParameterConstraint;
	}
	
	public ParserRule getParameterConstraintRule() {
		return getParameterConstraintAccess().getRule();
	}
	
	//Operator:
	//	greater?='>' | smaller?='<' | greaterequals?='>=' | smallerequals?='<=' | equals?='==' | notequals?='!=';
	public OperatorElements getOperatorAccess() {
		return pOperator;
	}
	
	public ParserRule getOperatorRule() {
		return getOperatorAccess().getRule();
	}
	
	//Clock:
	//	'clock' name=ID ';';
	public ClockElements getClockAccess() {
		return pClock;
	}
	
	public ParserRule getClockRule() {
		return getClockAccess().getRule();
	}
	
	//enum Type:
	//	integer | float | bool | string;
	public TypeElements getTypeAccess() {
		return eType;
	}
	
	public EnumRule getTypeRule() {
		return getTypeAccess().getRule();
	}
	
	//terminal NUMBER:
	//	'0'..'9'*;
	public TerminalRule getNUMBERRule() {
		return tNUMBER;
	}
	
	//terminal REAL:
	//	'0'..'9'* '.' '0'..'9'*;
	public TerminalRule getREALRule() {
		return tREAL;
	}
	
	//ObjectType:
	//	'object' name=ID;
	public ObjectTypeElements getObjectTypeAccess() {
		return pObjectType;
	}
	
	public ParserRule getObjectTypeRule() {
		return getObjectTypeAccess().getRule();
	}
	
	//Object:
	//	object+=ObjectType name=ID ';';
	public ObjectElements getObjectAccess() {
		return pObject;
	}
	
	public ParserRule getObjectRule() {
		return getObjectAccess().getRule();
	}
	
	//Constraint:
	//	'constraint' name=ID '{'
	//	messages+=Message*
	//	'}';
	public ConstraintElements getConstraintAccess() {
		return pConstraint;
	}
	
	public ParserRule getConstraintRule() {
		return getConstraintAccess().getRule();
	}
	
	//Alt:
	//	'alt' expressions+=Expression*;
	public AltElements getAltAccess() {
		return pAlt;
	}
	
	public ParserRule getAltRule() {
		return getAltAccess().getRule();
	}
	
	//Expression:
	//	'(' altCondition=LogicalExpression ')' '{'
	//	messages+=Message*
	//	'}';
	public ExpressionElements getExpressionAccess() {
		return pExpression;
	}
	
	public ParserRule getExpressionRule() {
		return getExpressionAccess().getRule();
	}
	
	//LogicalExpression:
	//	UnaryLogicalExpression | BinaryLogicalExpression;
	public LogicalExpressionElements getLogicalExpressionAccess() {
		return pLogicalExpression;
	}
	
	public ParserRule getLogicalExpressionRule() {
		return getLogicalExpressionAccess().getRule();
	}
	
	//BinaryLogicalExpression:
	//	EqualsExpression | EqualsBooleanExpression | GreaterThanExpression | LesserThanExpression | AndExpression |
	//	OrExpression;
	public BinaryLogicalExpressionElements getBinaryLogicalExpressionAccess() {
		return pBinaryLogicalExpression;
	}
	
	public ParserRule getBinaryLogicalExpressionRule() {
		return getBinaryLogicalExpressionAccess().getRule();
	}
	
	//AndExpression:
	//	'and' '(' lhs=LogicalExpression ',' rhs=LogicalExpression ')';
	public AndExpressionElements getAndExpressionAccess() {
		return pAndExpression;
	}
	
	public ParserRule getAndExpressionRule() {
		return getAndExpressionAccess().getRule();
	}
	
	//OrExpression:
	//	'or' '(' lhs=LogicalExpression ',' rhs=LogicalExpression ')';
	public OrExpressionElements getOrExpressionAccess() {
		return pOrExpression;
	}
	
	public ParserRule getOrExpressionRule() {
		return getOrExpressionAccess().getRule();
	}
	
	//EqualsExpression:
	//	'equals' '(' lhs=[Parameter] ',' rhs=NUMBER ')';
	public EqualsExpressionElements getEqualsExpressionAccess() {
		return pEqualsExpression;
	}
	
	public ParserRule getEqualsExpressionRule() {
		return getEqualsExpressionAccess().getRule();
	}
	
	//EqualsBooleanExpression:
	//	'equals' '(' lhs=[Parameter] ',' rhs='true' ')' | 'equals' '(' lhs=[Parameter] ',' rhs='false' ')';
	public EqualsBooleanExpressionElements getEqualsBooleanExpressionAccess() {
		return pEqualsBooleanExpression;
	}
	
	public ParserRule getEqualsBooleanExpressionRule() {
		return getEqualsBooleanExpressionAccess().getRule();
	}
	
	//GreaterThanExpression:
	//	'greater' '(' lhs=[Parameter] ',' rhs=NUMBER ')';
	public GreaterThanExpressionElements getGreaterThanExpressionAccess() {
		return pGreaterThanExpression;
	}
	
	public ParserRule getGreaterThanExpressionRule() {
		return getGreaterThanExpressionAccess().getRule();
	}
	
	//LesserThanExpression:
	//	'lesser' '(' lhs=[Parameter] ',' rhs=NUMBER ')';
	public LesserThanExpressionElements getLesserThanExpressionAccess() {
		return pLesserThanExpression;
	}
	
	public ParserRule getLesserThanExpressionRule() {
		return getLesserThanExpressionAccess().getRule();
	}
	
	//UnaryLogicalExpression:
	//	NotLogicalExpression;
	public UnaryLogicalExpressionElements getUnaryLogicalExpressionAccess() {
		return pUnaryLogicalExpression;
	}
	
	public ParserRule getUnaryLogicalExpressionRule() {
		return getUnaryLogicalExpressionAccess().getRule();
	}
	
	//NotLogicalExpression:
	//	'not' '(' operand=LogicalExpression ')';
	public NotLogicalExpressionElements getNotLogicalExpressionAccess() {
		return pNotLogicalExpression;
	}
	
	public ParserRule getNotLogicalExpressionRule() {
		return getNotLogicalExpressionAccess().getRule();
	}
	
	//Par:
	//	'par' '{' parexpression+=ParExpression* '}';
	public ParElements getParAccess() {
		return pPar;
	}
	
	public ParserRule getParRule() {
		return getParAccess().getRule();
	}
	
	//ParExpression:
	//	'case' name=ID '{' messages+=Message* '}';
	public ParExpressionElements getParExpressionAccess() {
		return pParExpression;
	}
	
	public ParserRule getParExpressionRule() {
		return getParExpressionAccess().getRule();
	}
	
	//Loop:
	//	'loop' '(' min=INT ',' max=INT ')' '{'
	//	messages+=Message*
	//	'}';
	public LoopElements getLoopAccess() {
		return pLoop;
	}
	
	public ParserRule getLoopRule() {
		return getLoopAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
