/*
 * generated by Xtext 2.16.0
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class DomainElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Domain");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSpecificationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cContextmodelsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cContextmodelsContextModelParserRuleCall_3_0 = (RuleCall)cContextmodelsAssignment_3.eContents().get(0);
		private final Assignment cContextfragmentsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cContextfragmentsContextFragmentParserRuleCall_4_0 = (RuleCall)cContextfragmentsAssignment_4.eContents().get(0);
		private final Assignment cEntitiesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cEntitiesEntityParserRuleCall_5_0 = (RuleCall)cEntitiesAssignment_5.eContents().get(0);
		private final Assignment cContextchangesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cContextchangesContextChangeParserRuleCall_6_0 = (RuleCall)cContextchangesAssignment_6.eContents().get(0);
		private final Assignment cObjectsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cObjectsObjectParserRuleCall_7_0 = (RuleCall)cObjectsAssignment_7.eContents().get(0);
		private final Assignment cConstraintsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cConstraintsConstraintParserRuleCall_8_0 = (RuleCall)cConstraintsAssignment_8.eContents().get(0);
		private final Assignment cScenariosAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cScenariosScenarioParserRuleCall_9_0 = (RuleCall)cScenariosAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Domain:
		//	'specification' name=ID '{'
		//	contextmodels+=ContextModel*
		//	contextfragments+=ContextFragment*
		//	entities+=Entity*
		//	contextchanges+=ContextChange*
		//	objects+=Object*
		//	constraints+=Constraint*
		//	scenarios+=Scenario* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'specification' name=ID '{' contextmodels+=ContextModel* contextfragments+=ContextFragment* entities+=Entity*
		//contextchanges+=ContextChange* objects+=Object* constraints+=Constraint* scenarios+=Scenario* '}'
		public Group getGroup() { return cGroup; }
		
		//'specification'
		public Keyword getSpecificationKeyword_0() { return cSpecificationKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//contextmodels+=ContextModel*
		public Assignment getContextmodelsAssignment_3() { return cContextmodelsAssignment_3; }
		
		//ContextModel
		public RuleCall getContextmodelsContextModelParserRuleCall_3_0() { return cContextmodelsContextModelParserRuleCall_3_0; }
		
		//contextfragments+=ContextFragment*
		public Assignment getContextfragmentsAssignment_4() { return cContextfragmentsAssignment_4; }
		
		//ContextFragment
		public RuleCall getContextfragmentsContextFragmentParserRuleCall_4_0() { return cContextfragmentsContextFragmentParserRuleCall_4_0; }
		
		//entities+=Entity*
		public Assignment getEntitiesAssignment_5() { return cEntitiesAssignment_5; }
		
		//Entity
		public RuleCall getEntitiesEntityParserRuleCall_5_0() { return cEntitiesEntityParserRuleCall_5_0; }
		
		//contextchanges+=ContextChange*
		public Assignment getContextchangesAssignment_6() { return cContextchangesAssignment_6; }
		
		//ContextChange
		public RuleCall getContextchangesContextChangeParserRuleCall_6_0() { return cContextchangesContextChangeParserRuleCall_6_0; }
		
		//objects+=Object*
		public Assignment getObjectsAssignment_7() { return cObjectsAssignment_7; }
		
		//Object
		public RuleCall getObjectsObjectParserRuleCall_7_0() { return cObjectsObjectParserRuleCall_7_0; }
		
		//constraints+=Constraint*
		public Assignment getConstraintsAssignment_8() { return cConstraintsAssignment_8; }
		
		//Constraint
		public RuleCall getConstraintsConstraintParserRuleCall_8_0() { return cConstraintsConstraintParserRuleCall_8_0; }
		
		//scenarios+=Scenario*
		public Assignment getScenariosAssignment_9() { return cScenariosAssignment_9; }
		
		//Scenario
		public RuleCall getScenariosScenarioParserRuleCall_9_0() { return cScenariosScenarioParserRuleCall_9_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class ContextModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ContextModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cContextmodelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEntitiesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEntitiesEntityParserRuleCall_3_0 = (RuleCall)cEntitiesAssignment_3.eContents().get(0);
		private final Assignment cRelationsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRelationsRelationParserRuleCall_4_0 = (RuleCall)cRelationsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ContextModel:
		//	'contextmodel' name=ID '{'
		//	entities+=Entity*
		//	relations+=Relation*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'contextmodel' name=ID '{' entities+=Entity* relations+=Relation* '}'
		public Group getGroup() { return cGroup; }
		
		//'contextmodel'
		public Keyword getContextmodelKeyword_0() { return cContextmodelKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//entities+=Entity*
		public Assignment getEntitiesAssignment_3() { return cEntitiesAssignment_3; }
		
		//Entity
		public RuleCall getEntitiesEntityParserRuleCall_3_0() { return cEntitiesEntityParserRuleCall_3_0; }
		
		//relations+=Relation*
		public Assignment getRelationsAssignment_4() { return cRelationsAssignment_4; }
		
		//Relation
		public RuleCall getRelationsRelationParserRuleCall_4_0() { return cRelationsRelationParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ContextFragmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ContextFragment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cContextfragmentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEntitiesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEntitiesEntityParserRuleCall_3_0 = (RuleCall)cEntitiesAssignment_3.eContents().get(0);
		private final Assignment cRelationsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRelationsRelationParserRuleCall_4_0 = (RuleCall)cRelationsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ContextFragment:
		//	'contextfragment' name=ID '{'
		//	entities+=Entity*
		//	relations+=Relation*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'contextfragment' name=ID '{' entities+=Entity* relations+=Relation* '}'
		public Group getGroup() { return cGroup; }
		
		//'contextfragment'
		public Keyword getContextfragmentKeyword_0() { return cContextfragmentKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//entities+=Entity*
		public Assignment getEntitiesAssignment_3() { return cEntitiesAssignment_3; }
		
		//Entity
		public RuleCall getEntitiesEntityParserRuleCall_3_0() { return cEntitiesEntityParserRuleCall_3_0; }
		
		//relations+=Relation*
		public Assignment getRelationsAssignment_4() { return cRelationsAssignment_4; }
		
		//Relation
		public RuleCall getRelationsRelationParserRuleCall_4_0() { return cRelationsRelationParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ChangeTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ChangeType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cAppearKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cEntityAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final CrossReference cEntityEntityCrossReference_0_2_0 = (CrossReference)cEntityAssignment_0_2.eContents().get(0);
		private final RuleCall cEntityEntityIDTerminalRuleCall_0_2_0_1 = (RuleCall)cEntityEntityCrossReference_0_2_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cDistanceKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cEntityAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final CrossReference cEntityEntityCrossReference_1_2_0 = (CrossReference)cEntityAssignment_1_2.eContents().get(0);
		private final RuleCall cEntityEntityIDTerminalRuleCall_1_2_0_1 = (RuleCall)cEntityEntityCrossReference_1_2_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cChangeToKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cAttributeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cAttributeAttributeCrossReference_2_1_0 = (CrossReference)cAttributeAssignment_2_1.eContents().get(0);
		private final RuleCall cAttributeAttributeIDTerminalRuleCall_2_1_0_1 = (RuleCall)cAttributeAttributeCrossReference_2_1_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cConditionsAtKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		
		//ChangeType:
		//	'appear' '(' entity=[Entity] ')' | 'distance' '(' entity=[Entity] ')' | 'changeTo' attribute=[Attribute] |
		//	'conditionsAt' '(' ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'appear' '(' entity=[Entity] ')' | 'distance' '(' entity=[Entity] ')' | 'changeTo' attribute=[Attribute] |
		//'conditionsAt' '(' ')'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'appear' '(' entity=[Entity] ')'
		public Group getGroup_0() { return cGroup_0; }
		
		//'appear'
		public Keyword getAppearKeyword_0_0() { return cAppearKeyword_0_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0_1() { return cLeftParenthesisKeyword_0_1; }
		
		//entity=[Entity]
		public Assignment getEntityAssignment_0_2() { return cEntityAssignment_0_2; }
		
		//[Entity]
		public CrossReference getEntityEntityCrossReference_0_2_0() { return cEntityEntityCrossReference_0_2_0; }
		
		//ID
		public RuleCall getEntityEntityIDTerminalRuleCall_0_2_0_1() { return cEntityEntityIDTerminalRuleCall_0_2_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_0_3() { return cRightParenthesisKeyword_0_3; }
		
		//'distance' '(' entity=[Entity] ')'
		public Group getGroup_1() { return cGroup_1; }
		
		//'distance'
		public Keyword getDistanceKeyword_1_0() { return cDistanceKeyword_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1_1() { return cLeftParenthesisKeyword_1_1; }
		
		//entity=[Entity]
		public Assignment getEntityAssignment_1_2() { return cEntityAssignment_1_2; }
		
		//[Entity]
		public CrossReference getEntityEntityCrossReference_1_2_0() { return cEntityEntityCrossReference_1_2_0; }
		
		//ID
		public RuleCall getEntityEntityIDTerminalRuleCall_1_2_0_1() { return cEntityEntityIDTerminalRuleCall_1_2_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_1_3() { return cRightParenthesisKeyword_1_3; }
		
		//'changeTo' attribute=[Attribute]
		public Group getGroup_2() { return cGroup_2; }
		
		//'changeTo'
		public Keyword getChangeToKeyword_2_0() { return cChangeToKeyword_2_0; }
		
		//attribute=[Attribute]
		public Assignment getAttributeAssignment_2_1() { return cAttributeAssignment_2_1; }
		
		//[Attribute]
		public CrossReference getAttributeAttributeCrossReference_2_1_0() { return cAttributeAttributeCrossReference_2_1_0; }
		
		//ID
		public RuleCall getAttributeAttributeIDTerminalRuleCall_2_1_0_1() { return cAttributeAttributeIDTerminalRuleCall_2_1_0_1; }
		
		//'conditionsAt' '(' ')'
		public Group getGroup_3() { return cGroup_3; }
		
		//'conditionsAt'
		public Keyword getConditionsAtKeyword_3_0() { return cConditionsAtKeyword_3_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3_1() { return cLeftParenthesisKeyword_3_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3_2() { return cRightParenthesisKeyword_3_2; }
	}
	public class ContextChangeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ContextChange");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cChangeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cChangeChangeTypeParserRuleCall_0_0 = (RuleCall)cChangeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//ContextChange:
		//	change+=ChangeType name=ID ';';
		@Override public ParserRule getRule() { return rule; }
		
		//change+=ChangeType name=ID ';'
		public Group getGroup() { return cGroup; }
		
		//change+=ChangeType
		public Assignment getChangeAssignment_0() { return cChangeAssignment_0; }
		
		//ChangeType
		public RuleCall getChangeChangeTypeParserRuleCall_0_0() { return cChangeChangeTypeParserRuleCall_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAttributeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Attribute:
		//	'attribute' name=ID ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'attribute' name=ID ';'
		public Group getGroup() { return cGroup; }
		
		//'attribute'
		public Keyword getAttributeKeyword_0() { return cAttributeKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Entity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEntityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAttributesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAttributesAttributeParserRuleCall_3_0 = (RuleCall)cAttributesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Entity:
		//	'entity' name=ID '{'
		//	attributes+=Attribute*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'entity' name=ID '{' attributes+=Attribute* '}'
		public Group getGroup() { return cGroup; }
		
		//'entity'
		public Keyword getEntityKeyword_0() { return cEntityKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//attributes+=Attribute*
		public Assignment getAttributesAssignment_3() { return cAttributesAssignment_3; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_3_0() { return cAttributesAttributeParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class RelationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Relation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRelationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSenderAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cSenderEntityCrossReference_3_0 = (CrossReference)cSenderAssignment_3.eContents().get(0);
		private final RuleCall cSenderEntityIDTerminalRuleCall_3_0_1 = (RuleCall)cSenderEntityCrossReference_3_0.eContents().get(1);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cReceiverAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cReceiverEntityCrossReference_5_0 = (CrossReference)cReceiverAssignment_5.eContents().get(0);
		private final RuleCall cReceiverEntityIDTerminalRuleCall_5_0_1 = (RuleCall)cReceiverEntityCrossReference_5_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cAttributesAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cAttributesAttributeParserRuleCall_8_0 = (RuleCall)cAttributesAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Relation:
		//	'relation' name=ID '(' sender=[Entity] ',' receiver=[Entity] ')' '{'
		//	attributes+=Attribute*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'relation' name=ID '(' sender=[Entity] ',' receiver=[Entity] ')' '{' attributes+=Attribute* '}'
		public Group getGroup() { return cGroup; }
		
		//'relation'
		public Keyword getRelationKeyword_0() { return cRelationKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//sender=[Entity]
		public Assignment getSenderAssignment_3() { return cSenderAssignment_3; }
		
		//[Entity]
		public CrossReference getSenderEntityCrossReference_3_0() { return cSenderEntityCrossReference_3_0; }
		
		//ID
		public RuleCall getSenderEntityIDTerminalRuleCall_3_0_1() { return cSenderEntityIDTerminalRuleCall_3_0_1; }
		
		//','
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//receiver=[Entity]
		public Assignment getReceiverAssignment_5() { return cReceiverAssignment_5; }
		
		//[Entity]
		public CrossReference getReceiverEntityCrossReference_5_0() { return cReceiverEntityCrossReference_5_0; }
		
		//ID
		public RuleCall getReceiverEntityIDTerminalRuleCall_5_0_1() { return cReceiverEntityIDTerminalRuleCall_5_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }
		
		//attributes+=Attribute*
		public Assignment getAttributesAssignment_8() { return cAttributesAssignment_8; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_8_0() { return cAttributesAttributeParserRuleCall_8_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class ScenarioElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Scenario");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cScenarioKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cScenariocontentsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cScenariocontentsScenarioContentParserRuleCall_3_0 = (RuleCall)cScenariocontentsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Scenario:
		//	'scenario' name=ID '{'
		//	scenariocontents+=ScenarioContent*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'scenario' name=ID '{' scenariocontents+=ScenarioContent* '}'
		public Group getGroup() { return cGroup; }
		
		//'scenario'
		public Keyword getScenarioKeyword_0() { return cScenarioKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//scenariocontents+=ScenarioContent*
		public Assignment getScenariocontentsAssignment_3() { return cScenariocontentsAssignment_3; }
		
		//ScenarioContent
		public RuleCall getScenariocontentsScenarioContentParserRuleCall_3_0() { return cScenariocontentsScenarioContentParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ScenarioContentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ScenarioContent");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cAltAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cAltAltParserRuleCall_0_0 = (RuleCall)cAltAssignment_0.eContents().get(0);
		private final Assignment cMessageAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cMessageMessageParserRuleCall_1_0 = (RuleCall)cMessageAssignment_1.eContents().get(0);
		private final Assignment cParAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cParParParserRuleCall_2_0 = (RuleCall)cParAssignment_2.eContents().get(0);
<<<<<<< HEAD
		private final Assignment cLoopAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cLoopLoopParserRuleCall_3_0 = (RuleCall)cLoopAssignment_3.eContents().get(0);
		
		//ScenarioContent:
		//	alt+=Alt | message+=Message | par+=Par | loop+=Loop;
		@Override public ParserRule getRule() { return rule; }
		
		//alt+=Alt | message+=Message | par+=Par | loop+=Loop
=======
		private final Assignment cContextmessageAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cContextmessageContextMessageParserRuleCall_3_0 = (RuleCall)cContextmessageAssignment_3.eContents().get(0);
		
		//ScenarioContent:
		//	alt+=Alt | message+=Message | par+=Par | contextmessage+=ContextMessage;
		@Override public ParserRule getRule() { return rule; }
		
		//alt+=Alt | message+=Message | par+=Par | contextmessage+=ContextMessage
>>>>>>> [xText] Added new message type: contextMessage
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//alt+=Alt
		public Assignment getAltAssignment_0() { return cAltAssignment_0; }
		
		//Alt
		public RuleCall getAltAltParserRuleCall_0_0() { return cAltAltParserRuleCall_0_0; }
		
		//message+=Message
		public Assignment getMessageAssignment_1() { return cMessageAssignment_1; }
		
		//Message
		public RuleCall getMessageMessageParserRuleCall_1_0() { return cMessageMessageParserRuleCall_1_0; }
		
		//par+=Par
		public Assignment getParAssignment_2() { return cParAssignment_2; }
		
		//Par
		public RuleCall getParParParserRuleCall_2_0() { return cParParParserRuleCall_2_0; }
		
<<<<<<< HEAD
		//loop+=Loop
		public Assignment getLoopAssignment_3() { return cLoopAssignment_3; }
		
		//Loop
		public RuleCall getLoopLoopParserRuleCall_3_0() { return cLoopLoopParserRuleCall_3_0; }
=======
		//contextmessage+=ContextMessage
		public Assignment getContextmessageAssignment_3() { return cContextmessageAssignment_3; }
		
		//ContextMessage
		public RuleCall getContextmessageContextMessageParserRuleCall_3_0() { return cContextmessageContextMessageParserRuleCall_3_0; }
>>>>>>> [xText] Added new message type: contextMessage
	}
	public class MessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Message");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMessageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cRequiredAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cRequiredRequiredKeyword_2_0 = (Keyword)cRequiredAssignment_2.eContents().get(0);
		private final Assignment cFailAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cFailFailKeyword_3_0 = (Keyword)cFailAssignment_3.eContents().get(0);
		private final Assignment cStrictAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Keyword cStrictStrictKeyword_4_0 = (Keyword)cStrictAssignment_4.eContents().get(0);
		private final Assignment cSenderAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cSenderObjectCrossReference_5_0 = (CrossReference)cSenderAssignment_5.eContents().get(0);
		private final RuleCall cSenderObjectIDTerminalRuleCall_5_0_1 = (RuleCall)cSenderObjectCrossReference_5_0.eContents().get(1);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cReceiverAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cReceiverObjectCrossReference_7_0 = (CrossReference)cReceiverAssignment_7.eContents().get(0);
		private final RuleCall cReceiverObjectIDTerminalRuleCall_7_0_1 = (RuleCall)cReceiverObjectCrossReference_7_0.eContents().get(1);
		private final Assignment cPastAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final Keyword cPastPastKeyword_8_0 = (Keyword)cPastAssignment_8.eContents().get(0);
		private final Assignment cFutureAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final Keyword cFutureFutureKeyword_9_0 = (Keyword)cFutureAssignment_9.eContents().get(0);
		private final Assignment cConstraintAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final Keyword cConstraintConstraintKeyword_10_0 = (Keyword)cConstraintAssignment_10.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cCAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final CrossReference cCConstraintCrossReference_12_0 = (CrossReference)cCAssignment_12.eContents().get(0);
		private final RuleCall cCConstraintIDTerminalRuleCall_12_0_1 = (RuleCall)cCConstraintCrossReference_12_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cSemicolonKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		//Message:
		//	'message' name=Name required?='required'? fail?='fail'? strict?='strict'?
		//	sender=[Object] '->' receiver=[Object] past?='past'? future?='future'? constraint?='constraint'?
		//	'{'? c=[Constraint]? '}'? ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'message' name=Name required?='required'? fail?='fail'? strict?='strict'? sender=[Object] '->' receiver=[Object]
		//past?='past'? future?='future'? constraint?='constraint'? '{'? c=[Constraint]? '}'? ';'
		public Group getGroup() { return cGroup; }
		
		//'message'
		public Keyword getMessageKeyword_0() { return cMessageKeyword_0; }
		
		//name=Name
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_1_0() { return cNameNameParserRuleCall_1_0; }
		
		//required?='required'?
		public Assignment getRequiredAssignment_2() { return cRequiredAssignment_2; }
		
		//'required'
		public Keyword getRequiredRequiredKeyword_2_0() { return cRequiredRequiredKeyword_2_0; }
		
		//fail?='fail'?
		public Assignment getFailAssignment_3() { return cFailAssignment_3; }
		
		//'fail'
		public Keyword getFailFailKeyword_3_0() { return cFailFailKeyword_3_0; }
		
		//strict?='strict'?
		public Assignment getStrictAssignment_4() { return cStrictAssignment_4; }
		
		//'strict'
		public Keyword getStrictStrictKeyword_4_0() { return cStrictStrictKeyword_4_0; }
		
		//sender=[Object]
		public Assignment getSenderAssignment_5() { return cSenderAssignment_5; }
		
		//[Object]
		public CrossReference getSenderObjectCrossReference_5_0() { return cSenderObjectCrossReference_5_0; }
		
		//ID
		public RuleCall getSenderObjectIDTerminalRuleCall_5_0_1() { return cSenderObjectIDTerminalRuleCall_5_0_1; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_6() { return cHyphenMinusGreaterThanSignKeyword_6; }
		
		//receiver=[Object]
		public Assignment getReceiverAssignment_7() { return cReceiverAssignment_7; }
		
		//[Object]
		public CrossReference getReceiverObjectCrossReference_7_0() { return cReceiverObjectCrossReference_7_0; }
		
		//ID
		public RuleCall getReceiverObjectIDTerminalRuleCall_7_0_1() { return cReceiverObjectIDTerminalRuleCall_7_0_1; }
		
		//past?='past'?
		public Assignment getPastAssignment_8() { return cPastAssignment_8; }
		
		//'past'
		public Keyword getPastPastKeyword_8_0() { return cPastPastKeyword_8_0; }
		
		//future?='future'?
		public Assignment getFutureAssignment_9() { return cFutureAssignment_9; }
		
		//'future'
		public Keyword getFutureFutureKeyword_9_0() { return cFutureFutureKeyword_9_0; }
		
		//constraint?='constraint'?
		public Assignment getConstraintAssignment_10() { return cConstraintAssignment_10; }
		
		//'constraint'
		public Keyword getConstraintConstraintKeyword_10_0() { return cConstraintConstraintKeyword_10_0; }
		
		//'{'?
		public Keyword getLeftCurlyBracketKeyword_11() { return cLeftCurlyBracketKeyword_11; }
		
		//c=[Constraint]?
		public Assignment getCAssignment_12() { return cCAssignment_12; }
		
		//[Constraint]
		public CrossReference getCConstraintCrossReference_12_0() { return cCConstraintCrossReference_12_0; }
		
		//ID
		public RuleCall getCConstraintIDTerminalRuleCall_12_0_1() { return cCConstraintIDTerminalRuleCall_12_0_1; }
		
		//'}'?
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
		
		//';'
		public Keyword getSemicolonKeyword_14() { return cSemicolonKeyword_14; }
	}
	public class ContextMessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ContextMessage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cContextMessageContentParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cRequiredAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cRequiredRequiredKeyword_1_0 = (Keyword)cRequiredAssignment_1.eContents().get(0);
		private final Assignment cFailAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cFailFailKeyword_2_0 = (Keyword)cFailAssignment_2.eContents().get(0);
		private final Assignment cStrictAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cStrictStrictKeyword_3_0 = (Keyword)cStrictAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ContextMessage:
		//	ContextMessageContent
		//	required?='required'? fail?='fail'? strict?='strict'?
		//	';';
		@Override public ParserRule getRule() { return rule; }
		
		//ContextMessageContent required?='required'? fail?='fail'? strict?='strict'? ';'
		public Group getGroup() { return cGroup; }
		
		//ContextMessageContent
		public RuleCall getContextMessageContentParserRuleCall_0() { return cContextMessageContentParserRuleCall_0; }
		
		//required?='required'?
		public Assignment getRequiredAssignment_1() { return cRequiredAssignment_1; }
		
		//'required'
		public Keyword getRequiredRequiredKeyword_1_0() { return cRequiredRequiredKeyword_1_0; }
		
		//fail?='fail'?
		public Assignment getFailAssignment_2() { return cFailAssignment_2; }
		
		//'fail'
		public Keyword getFailFailKeyword_2_0() { return cFailFailKeyword_2_0; }
		
		//strict?='strict'?
		public Assignment getStrictAssignment_3() { return cStrictAssignment_3; }
		
		//'strict'
		public Keyword getStrictStrictKeyword_3_0() { return cStrictStrictKeyword_3_0; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class ContextMessageContentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ContextMessageContent");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMatchMessageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cChangeMessageParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ContextMessageContent:
		//	MatchMessage | ChangeMessage;
		@Override public ParserRule getRule() { return rule; }
		
		//MatchMessage | ChangeMessage
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MatchMessage
		public RuleCall getMatchMessageParserRuleCall_0() { return cMatchMessageParserRuleCall_0; }
		
		//ChangeMessage
		public RuleCall getChangeMessageParserRuleCall_1() { return cChangeMessageParserRuleCall_1; }
	}
	public class MatchMessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.MatchMessage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMatchKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cContentAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cContentContextFragmentCrossReference_3_0 = (CrossReference)cContentAssignment_3.eContents().get(0);
		private final RuleCall cContentContextFragmentIDTerminalRuleCall_3_0_1 = (RuleCall)cContentContextFragmentCrossReference_3_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//MatchMessage:
		//	'match' name=ID '(' content=[ContextFragment]? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'match' name=ID '(' content=[ContextFragment]? ')'
		public Group getGroup() { return cGroup; }
		
		//'match'
		public Keyword getMatchKeyword_0() { return cMatchKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//content=[ContextFragment]?
		public Assignment getContentAssignment_3() { return cContentAssignment_3; }
		
		//[ContextFragment]
		public CrossReference getContentContextFragmentCrossReference_3_0() { return cContentContextFragmentCrossReference_3_0; }
		
		//ID
		public RuleCall getContentContextFragmentIDTerminalRuleCall_3_0_1() { return cContentContextFragmentIDTerminalRuleCall_3_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class ChangeMessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ChangeMessage");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDisappearMessageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAppearMessageParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDistanceMessageParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ChangeMessage:
		//	DisappearMessage | AppearMessage | DistanceMessage;
		@Override public ParserRule getRule() { return rule; }
		
		//DisappearMessage | AppearMessage | DistanceMessage
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DisappearMessage
		public RuleCall getDisappearMessageParserRuleCall_0() { return cDisappearMessageParserRuleCall_0; }
		
		//AppearMessage
		public RuleCall getAppearMessageParserRuleCall_1() { return cAppearMessageParserRuleCall_1; }
		
		//DistanceMessage
		public RuleCall getDistanceMessageParserRuleCall_2() { return cDistanceMessageParserRuleCall_2; }
	}
	public class AppearMessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.AppearMessage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAppearKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEntityAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cEntityEntityCrossReference_3_0 = (CrossReference)cEntityAssignment_3.eContents().get(0);
		private final RuleCall cEntityEntityIDTerminalRuleCall_3_0_1 = (RuleCall)cEntityEntityCrossReference_3_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//AppearMessage:
		//	'appear' name=ID '(' entity=[Entity]? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'appear' name=ID '(' entity=[Entity]? ')'
		public Group getGroup() { return cGroup; }
		
		//'appear'
		public Keyword getAppearKeyword_0() { return cAppearKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//entity=[Entity]?
		public Assignment getEntityAssignment_3() { return cEntityAssignment_3; }
		
		//[Entity]
		public CrossReference getEntityEntityCrossReference_3_0() { return cEntityEntityCrossReference_3_0; }
		
		//ID
		public RuleCall getEntityEntityIDTerminalRuleCall_3_0_1() { return cEntityEntityIDTerminalRuleCall_3_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class DisappearMessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.DisappearMessage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDisappearKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEntityAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cEntityEntityCrossReference_3_0 = (CrossReference)cEntityAssignment_3.eContents().get(0);
		private final RuleCall cEntityEntityIDTerminalRuleCall_3_0_1 = (RuleCall)cEntityEntityCrossReference_3_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//DisappearMessage:
		//	'disappear' name=ID '(' entity=[Entity]? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'disappear' name=ID '(' entity=[Entity]? ')'
		public Group getGroup() { return cGroup; }
		
		//'disappear'
		public Keyword getDisappearKeyword_0() { return cDisappearKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//entity=[Entity]?
		public Assignment getEntityAssignment_3() { return cEntityAssignment_3; }
		
		//[Entity]
		public CrossReference getEntityEntityCrossReference_3_0() { return cEntityEntityCrossReference_3_0; }
		
		//ID
		public RuleCall getEntityEntityIDTerminalRuleCall_3_0_1() { return cEntityEntityIDTerminalRuleCall_3_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class DistanceMessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.DistanceMessage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDistanceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEntityAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cEntityEntityCrossReference_3_0 = (CrossReference)cEntityAssignment_3.eContents().get(0);
		private final RuleCall cEntityEntityIDTerminalRuleCall_3_0_1 = (RuleCall)cEntityEntityCrossReference_3_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//DistanceMessage:
		//	'distance' name=ID '(' entity=[Entity]? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'distance' name=ID '(' entity=[Entity]? ')'
		public Group getGroup() { return cGroup; }
		
		//'distance'
		public Keyword getDistanceKeyword_0() { return cDistanceKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//entity=[Entity]?
		public Assignment getEntityAssignment_3() { return cEntityAssignment_3; }
		
		//[Entity]
		public CrossReference getEntityEntityCrossReference_3_0() { return cEntityEntityCrossReference_3_0; }
		
		//ID
		public RuleCall getEntityEntityIDTerminalRuleCall_3_0_1() { return cEntityEntityIDTerminalRuleCall_3_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class NameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Name");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final RuleCall cIDTerminalRuleCall_2_0 = (RuleCall)cAlternatives_2.eContents().get(0);
		private final RuleCall cNumberTerminalRuleCall_2_1 = (RuleCall)cAlternatives_2.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Name:
		//	ID '(' (ID | Number)? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//ID '(' (ID | Number)? ')'
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//(ID | Number)?
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_2_0() { return cIDTerminalRuleCall_2_0; }
		
		//Number
		public RuleCall getNumberTerminalRuleCall_2_1() { return cNumberTerminalRuleCall_2_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class ObjectTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ObjectType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cObjectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//ObjectType:
		//	'object' name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//'object' name=ID
		public Group getGroup() { return cGroup; }
		
		//'object'
		public Keyword getObjectKeyword_0() { return cObjectKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}
	public class ObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Object");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cObjectAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cObjectObjectTypeParserRuleCall_0_0 = (RuleCall)cObjectAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Object:
		//	object+=ObjectType name=ID ';';
		@Override public ParserRule getRule() { return rule; }
		
		//object+=ObjectType name=ID ';'
		public Group getGroup() { return cGroup; }
		
		//object+=ObjectType
		public Assignment getObjectAssignment_0() { return cObjectAssignment_0; }
		
		//ObjectType
		public RuleCall getObjectObjectTypeParserRuleCall_0_0() { return cObjectObjectTypeParserRuleCall_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class ConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Constraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConstraintKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cMessagesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMessagesMessageParserRuleCall_3_0 = (RuleCall)cMessagesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Constraint:
		//	'constraint' name=ID '{'
		//	messages+=Message*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'constraint' name=ID '{' messages+=Message* '}'
		public Group getGroup() { return cGroup; }
		
		//'constraint'
		public Keyword getConstraintKeyword_0() { return cConstraintKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//messages+=Message*
		public Assignment getMessagesAssignment_3() { return cMessagesAssignment_3; }
		
		//Message
		public RuleCall getMessagesMessageParserRuleCall_3_0() { return cMessagesMessageParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class AltElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Alt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAltKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cExpressionsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cExpressionsExpressionParserRuleCall_1_0 = (RuleCall)cExpressionsAssignment_1.eContents().get(0);
		
		//Alt:
		//	'alt' expressions+=Expression*;
		@Override public ParserRule getRule() { return rule; }
		
		//'alt' expressions+=Expression*
		public Group getGroup() { return cGroup; }
		
		//'alt'
		public Keyword getAltKeyword_0() { return cAltKeyword_0; }
		
		//expressions+=Expression*
		public Assignment getExpressionsAssignment_1() { return cExpressionsAssignment_1; }
		
		//Expression
		public RuleCall getExpressionsExpressionParserRuleCall_1_0() { return cExpressionsExpressionParserRuleCall_1_0; }
	}
	public class ExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Expression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cGreaterThanSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLessThanSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cGreaterThanSignEqualsSignKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLessThanSignEqualsSignKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Alternatives cAlternatives_7 = (Alternatives)cGroup.eContents().get(7);
		private final RuleCall cIDTerminalRuleCall_7_0 = (RuleCall)cAlternatives_7.eContents().get(0);
		private final RuleCall cNumberTerminalRuleCall_7_1 = (RuleCall)cAlternatives_7.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cLeftCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cMessagesAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cMessagesMessageParserRuleCall_10_0 = (RuleCall)cMessagesAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Expression:
		//	'(' ID? '='? '>'? '<'? '>='? '<='? (ID | Number)? ')' '{'
		//	messages+=Message*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'(' ID? '='? '>'? '<'? '>='? '<='? (ID | Number)? ')' '{' messages+=Message* '}'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//ID?
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
		
		//'='?
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//'>'?
		public Keyword getGreaterThanSignKeyword_3() { return cGreaterThanSignKeyword_3; }
		
		//'<'?
		public Keyword getLessThanSignKeyword_4() { return cLessThanSignKeyword_4; }
		
		//'>='?
		public Keyword getGreaterThanSignEqualsSignKeyword_5() { return cGreaterThanSignEqualsSignKeyword_5; }
		
		//'<='?
		public Keyword getLessThanSignEqualsSignKeyword_6() { return cLessThanSignEqualsSignKeyword_6; }
		
		//(ID | Number)?
		public Alternatives getAlternatives_7() { return cAlternatives_7; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_7_0() { return cIDTerminalRuleCall_7_0; }
		
		//Number
		public RuleCall getNumberTerminalRuleCall_7_1() { return cNumberTerminalRuleCall_7_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_8() { return cRightParenthesisKeyword_8; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_9() { return cLeftCurlyBracketKeyword_9; }
		
		//messages+=Message*
		public Assignment getMessagesAssignment_10() { return cMessagesAssignment_10; }
		
		//Message
		public RuleCall getMessagesMessageParserRuleCall_10_0() { return cMessagesMessageParserRuleCall_10_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class ParElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Par");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cParKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cParexpressionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cParexpressionParExpressionParserRuleCall_2_0 = (RuleCall)cParexpressionAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Par:
		//	'par' '{' parexpression+=ParExpression* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'par' '{' parexpression+=ParExpression* '}'
		public Group getGroup() { return cGroup; }
		
		//'par'
		public Keyword getParKeyword_0() { return cParKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//parexpression+=ParExpression*
		public Assignment getParexpressionAssignment_2() { return cParexpressionAssignment_2; }
		
		//ParExpression
		public RuleCall getParexpressionParExpressionParserRuleCall_2_0() { return cParexpressionParExpressionParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class ParExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ParExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCaseKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cMessagesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMessagesMessageParserRuleCall_3_0 = (RuleCall)cMessagesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ParExpression:
		//	'case' name=ID '{' messages+=Message* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'case' name=ID '{' messages+=Message* '}'
		public Group getGroup() { return cGroup; }
		
		//'case'
		public Keyword getCaseKeyword_0() { return cCaseKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//messages+=Message*
		public Assignment getMessagesAssignment_3() { return cMessagesAssignment_3; }
		
		//Message
		public RuleCall getMessagesMessageParserRuleCall_3_0() { return cMessagesMessageParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class LoopElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Loop");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLoopKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMinAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMinNumberTerminalRuleCall_2_0 = (RuleCall)cMinAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMaxAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMaxNumberTerminalRuleCall_4_0 = (RuleCall)cMaxAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cMessagesAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cMessagesMessageParserRuleCall_7_0 = (RuleCall)cMessagesAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Loop:
		//	'loop' '(' min=Number ',' max=Number ')' '{'
		//	messages+=Message*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'loop' '(' min=Number ',' max=Number ')' '{' messages+=Message* '}'
		public Group getGroup() { return cGroup; }
		
		//'loop'
		public Keyword getLoopKeyword_0() { return cLoopKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//min=Number
		public Assignment getMinAssignment_2() { return cMinAssignment_2; }
		
		//Number
		public RuleCall getMinNumberTerminalRuleCall_2_0() { return cMinNumberTerminalRuleCall_2_0; }
		
		//','
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//max=Number
		public Assignment getMaxAssignment_4() { return cMaxAssignment_4; }
		
		//Number
		public RuleCall getMaxNumberTerminalRuleCall_4_0() { return cMaxNumberTerminalRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//messages+=Message*
		public Assignment getMessagesAssignment_7() { return cMessagesAssignment_7; }
		
		//Message
		public RuleCall getMessagesMessageParserRuleCall_7_0() { return cMessagesMessageParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	
	
	private final DomainElements pDomain;
	private final ContextModelElements pContextModel;
	private final ContextFragmentElements pContextFragment;
	private final ChangeTypeElements pChangeType;
	private final ContextChangeElements pContextChange;
	private final AttributeElements pAttribute;
	private final EntityElements pEntity;
	private final RelationElements pRelation;
	private final ScenarioElements pScenario;
	private final ScenarioContentElements pScenarioContent;
	private final MessageElements pMessage;
	private final ContextMessageElements pContextMessage;
	private final ContextMessageContentElements pContextMessageContent;
	private final MatchMessageElements pMatchMessage;
	private final ChangeMessageElements pChangeMessage;
	private final AppearMessageElements pAppearMessage;
	private final DisappearMessageElements pDisappearMessage;
	private final DistanceMessageElements pDistanceMessage;
	private final NameElements pName;
	private final TerminalRule tNumber;
	private final ObjectTypeElements pObjectType;
	private final ObjectElements pObject;
	private final ConstraintElements pConstraint;
	private final AltElements pAlt;
	private final ExpressionElements pExpression;
	private final ParElements pPar;
	private final ParExpressionElements pParExpression;
	private final LoopElements pLoop;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pDomain = new DomainElements();
		this.pContextModel = new ContextModelElements();
		this.pContextFragment = new ContextFragmentElements();
		this.pChangeType = new ChangeTypeElements();
		this.pContextChange = new ContextChangeElements();
		this.pAttribute = new AttributeElements();
		this.pEntity = new EntityElements();
		this.pRelation = new RelationElements();
		this.pScenario = new ScenarioElements();
		this.pScenarioContent = new ScenarioContentElements();
		this.pMessage = new MessageElements();
		this.pContextMessage = new ContextMessageElements();
		this.pContextMessageContent = new ContextMessageContentElements();
		this.pMatchMessage = new MatchMessageElements();
		this.pChangeMessage = new ChangeMessageElements();
		this.pAppearMessage = new AppearMessageElements();
		this.pDisappearMessage = new DisappearMessageElements();
		this.pDistanceMessage = new DistanceMessageElements();
		this.pName = new NameElements();
		this.tNumber = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Number");
		this.pObjectType = new ObjectTypeElements();
		this.pObject = new ObjectElements();
		this.pConstraint = new ConstraintElements();
		this.pAlt = new AltElements();
		this.pExpression = new ExpressionElements();
		this.pPar = new ParElements();
		this.pParExpression = new ParExpressionElements();
		this.pLoop = new LoopElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Domain:
	//	'specification' name=ID '{'
	//	contextmodels+=ContextModel*
	//	contextfragments+=ContextFragment*
	//	entities+=Entity*
	//	contextchanges+=ContextChange*
	//	objects+=Object*
	//	constraints+=Constraint*
	//	scenarios+=Scenario* '}';
	public DomainElements getDomainAccess() {
		return pDomain;
	}
	
	public ParserRule getDomainRule() {
		return getDomainAccess().getRule();
	}
	
	//ContextModel:
	//	'contextmodel' name=ID '{'
	//	entities+=Entity*
	//	relations+=Relation*
	//	'}';
	public ContextModelElements getContextModelAccess() {
		return pContextModel;
	}
	
	public ParserRule getContextModelRule() {
		return getContextModelAccess().getRule();
	}
	
	//ContextFragment:
	//	'contextfragment' name=ID '{'
	//	entities+=Entity*
	//	relations+=Relation*
	//	'}';
	public ContextFragmentElements getContextFragmentAccess() {
		return pContextFragment;
	}
	
	public ParserRule getContextFragmentRule() {
		return getContextFragmentAccess().getRule();
	}
	
	//ChangeType:
	//	'appear' '(' entity=[Entity] ')' | 'distance' '(' entity=[Entity] ')' | 'changeTo' attribute=[Attribute] |
	//	'conditionsAt' '(' ')';
	public ChangeTypeElements getChangeTypeAccess() {
		return pChangeType;
	}
	
	public ParserRule getChangeTypeRule() {
		return getChangeTypeAccess().getRule();
	}
	
	//ContextChange:
	//	change+=ChangeType name=ID ';';
	public ContextChangeElements getContextChangeAccess() {
		return pContextChange;
	}
	
	public ParserRule getContextChangeRule() {
		return getContextChangeAccess().getRule();
	}
	
	//Attribute:
	//	'attribute' name=ID ';';
	public AttributeElements getAttributeAccess() {
		return pAttribute;
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}
	
	//Entity:
	//	'entity' name=ID '{'
	//	attributes+=Attribute*
	//	'}';
	public EntityElements getEntityAccess() {
		return pEntity;
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}
	
	//Relation:
	//	'relation' name=ID '(' sender=[Entity] ',' receiver=[Entity] ')' '{'
	//	attributes+=Attribute*
	//	'}';
	public RelationElements getRelationAccess() {
		return pRelation;
	}
	
	public ParserRule getRelationRule() {
		return getRelationAccess().getRule();
	}
	
	//Scenario:
	//	'scenario' name=ID '{'
	//	scenariocontents+=ScenarioContent*
	//	'}';
	public ScenarioElements getScenarioAccess() {
		return pScenario;
	}
	
	public ParserRule getScenarioRule() {
		return getScenarioAccess().getRule();
	}
	
	//ScenarioContent:
<<<<<<< HEAD
	//	alt+=Alt | message+=Message | par+=Par | loop+=Loop;
=======
	//	alt+=Alt | message+=Message | par+=Par | contextmessage+=ContextMessage;
>>>>>>> [xText] Added new message type: contextMessage
	public ScenarioContentElements getScenarioContentAccess() {
		return pScenarioContent;
	}
	
	public ParserRule getScenarioContentRule() {
		return getScenarioContentAccess().getRule();
	}
	
	//Message:
	//	'message' name=Name required?='required'? fail?='fail'? strict?='strict'?
	//	sender=[Object] '->' receiver=[Object] past?='past'? future?='future'? constraint?='constraint'?
	//	'{'? c=[Constraint]? '}'? ';';
	public MessageElements getMessageAccess() {
		return pMessage;
	}
	
	public ParserRule getMessageRule() {
		return getMessageAccess().getRule();
	}
	
	//ContextMessage:
	//	ContextMessageContent
	//	required?='required'? fail?='fail'? strict?='strict'?
	//	';';
	public ContextMessageElements getContextMessageAccess() {
		return pContextMessage;
	}
	
	public ParserRule getContextMessageRule() {
		return getContextMessageAccess().getRule();
	}
	
	//ContextMessageContent:
	//	MatchMessage | ChangeMessage;
	public ContextMessageContentElements getContextMessageContentAccess() {
		return pContextMessageContent;
	}
	
	public ParserRule getContextMessageContentRule() {
		return getContextMessageContentAccess().getRule();
	}
	
	//MatchMessage:
	//	'match' name=ID '(' content=[ContextFragment]? ')';
	public MatchMessageElements getMatchMessageAccess() {
		return pMatchMessage;
	}
	
	public ParserRule getMatchMessageRule() {
		return getMatchMessageAccess().getRule();
	}
	
	//ChangeMessage:
	//	DisappearMessage | AppearMessage | DistanceMessage;
	public ChangeMessageElements getChangeMessageAccess() {
		return pChangeMessage;
	}
	
	public ParserRule getChangeMessageRule() {
		return getChangeMessageAccess().getRule();
	}
	
	//AppearMessage:
	//	'appear' name=ID '(' entity=[Entity]? ')';
	public AppearMessageElements getAppearMessageAccess() {
		return pAppearMessage;
	}
	
	public ParserRule getAppearMessageRule() {
		return getAppearMessageAccess().getRule();
	}
	
	//DisappearMessage:
	//	'disappear' name=ID '(' entity=[Entity]? ')';
	public DisappearMessageElements getDisappearMessageAccess() {
		return pDisappearMessage;
	}
	
	public ParserRule getDisappearMessageRule() {
		return getDisappearMessageAccess().getRule();
	}
	
	//DistanceMessage:
	//	'distance' name=ID '(' entity=[Entity]? ')';
	public DistanceMessageElements getDistanceMessageAccess() {
		return pDistanceMessage;
	}
	
	public ParserRule getDistanceMessageRule() {
		return getDistanceMessageAccess().getRule();
	}
	
	//Name:
	//	ID '(' (ID | Number)? ')';
	public NameElements getNameAccess() {
		return pName;
	}
	
	public ParserRule getNameRule() {
		return getNameAccess().getRule();
	}
	
	//terminal Number:
	//	'0'..'9'*;
	public TerminalRule getNumberRule() {
		return tNumber;
	}
	
	//ObjectType:
	//	'object' name=ID;
	public ObjectTypeElements getObjectTypeAccess() {
		return pObjectType;
	}
	
	public ParserRule getObjectTypeRule() {
		return getObjectTypeAccess().getRule();
	}
	
	//Object:
	//	object+=ObjectType name=ID ';';
	public ObjectElements getObjectAccess() {
		return pObject;
	}
	
	public ParserRule getObjectRule() {
		return getObjectAccess().getRule();
	}
	
	//Constraint:
	//	'constraint' name=ID '{'
	//	messages+=Message*
	//	'}';
	public ConstraintElements getConstraintAccess() {
		return pConstraint;
	}
	
	public ParserRule getConstraintRule() {
		return getConstraintAccess().getRule();
	}
	
	//Alt:
	//	'alt' expressions+=Expression*;
	public AltElements getAltAccess() {
		return pAlt;
	}
	
	public ParserRule getAltRule() {
		return getAltAccess().getRule();
	}
	
	//Expression:
	//	'(' ID? '='? '>'? '<'? '>='? '<='? (ID | Number)? ')' '{'
	//	messages+=Message*
	//	'}';
	public ExpressionElements getExpressionAccess() {
		return pExpression;
	}
	
	public ParserRule getExpressionRule() {
		return getExpressionAccess().getRule();
	}
	
	//Par:
	//	'par' '{' parexpression+=ParExpression* '}';
	public ParElements getParAccess() {
		return pPar;
	}
	
	public ParserRule getParRule() {
		return getParAccess().getRule();
	}
	
	//ParExpression:
	//	'case' name=ID '{' messages+=Message* '}';
	public ParExpressionElements getParExpressionAccess() {
		return pParExpression;
	}
	
	public ParserRule getParExpressionRule() {
		return getParExpressionAccess().getRule();
	}
	
	//Loop:
	//	'loop' '(' min=Number ',' max=Number ')' '{'
	//	messages+=Message*
	//	'}';
	public LoopElements getLoopAccess() {
		return pLoop;
	}
	
	public ParserRule getLoopRule() {
		return getLoopAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
